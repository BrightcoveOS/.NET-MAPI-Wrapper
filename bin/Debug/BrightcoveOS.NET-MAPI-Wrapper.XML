<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BrightcoveOS.NET-MAPI-Wrapper</name>
    </assembly>
    <members>
        <member name="T:BrightcoveMapiWrapper.Api.Connectors.IRequestBuilder">
            <summary>
            Defines how to build requests to Brightcove's REST API.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.IRequestBuilder.BuildRequest(System.String)">
            <summary>
            Builds a GET request for the specified URL.
            </summary>
            <param name="url">The URL to request.</param>
            <returns>An HttpWebRequest for GETing the specified URL.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.IRequestBuilder.BuildPostFormRequest(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Builds a POST request for the specified URL and parameters.
            </summary>
            <param name="postUrl">The URL to request.</param>
            <param name="postParameters">The parameters to POST.</param>
            <returns>An HttpWebRequest that will POST the specified parameters.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.IRequestBuilder.BuildMultipartFormDataPostRequest(System.String,System.Collections.Specialized.NameValueCollection,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo)">
            <summary>
            Builds a POST request for the specified URL, parameters, and file data.
            </summary>
            <param name="postUrl">The URL to request.</param>
            <param name="postParameters">The parameters to POST.</param>
            <param name="fileUploadInfo">Information about the file to be uploaded.</param>
            <returns></returns>
        </member>
        <member name="T:BrightcoveMapiWrapper.Api.BrightcoveApi">
            <summary>
            .NET Wrapper for Brightcove's REST Media API.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTracks(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Find all audio tracks in the Brightcove media library for this account.
            </summary>
            <param name="pageSize">Number of items returned per page. Maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audiotracks 
            contained in the returned object.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of audio tracks matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTracks(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find all audio tracks in the Brightcove media library for this account.
            </summary>
            <param name="pageSize">Number of items returned per page. Maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audiotracks 
            contained in the returned object.</param>
            <returns>A collection of audio tracks matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTracks(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder)">
            <summary>
            Find all audio tracks in the Brightcove media library for this account.
            </summary>
            <param name="pageSize">Number of items returned per page. Maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <returns>A collection of audio tracks matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTracks(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy)">
            <summary>
            Find all audio tracks in the Brightcove media library for this account.
            </summary>
            <param name="pageSize">Number of items returned per page. Maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <returns>A collection of audio tracks matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTracks(System.Int32,System.Int32)">
            <summary>
            Find all audio tracks in the Brightcove media library for this account.
            </summary>
            <param name="pageSize">Number of items returned per page. Maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>A collection of audio tracks matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTracks">
            <summary>
            Find all audio tracks in the Brightcove media library for this account.
            </summary>
            <returns>A collection of audio tracks matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackById(System.Int64,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds a single audio track with the specified id.
            </summary>
            <param name="audioTrackId">The id of the audio track you would like to retrieve.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audiotrack 
            contained in the returned object.</param>
            <returns>The Audio Track you requested, with the specified fields populated, or null, if there is no audio 
            track with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackById(System.Int64)">
            <summary>
            Finds a single audio track with the specified id.
            </summary>
            <param name="audioTrackId">The id of the audio track you would like to retrieve.</param>
            <returns>The Audio Track you requested, with the specified fields populated, or null, if there is no audio 
            track with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackByReferenceId(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find an audio track based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The publisher-assigned reference id for the audio track we're searching for.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audiotrack 
            contained in the returned object.</param>
            <returns>The Audio Track whose reference id matches the one given, or null if no match is found.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackByReferenceId(System.String)">
            <summary>
            Find an audio track based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The publisher-assigned reference id for the audio track we're searching for.</param>
            <returns>The Audio Track whose reference id matches the one given, or null if no match is found.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByIds(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple audio tracks, given their ids.
            </summary>
            <param name="audioTrackIds">The list of audio track ids for the audio tracks we'd like to retrieve.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audiotracks
            contained in the returned object.</param>
            <returns>A collection that contains the audio track objects corresponding to the audio track ids given.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByIds(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Find multiple audio tracks, given their ids.
            </summary>
            <param name="audioTrackIds">The list of audio track ids for the audio tracks we'd like to retrieve.</param>
            <returns>A collection that contains the audio track objects corresponding to the audio track ids given.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByReferenceIds(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple audio tracks based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The list of reference ids for the audio tracks we'd like to retrieve</param>
            <param name="audioTrackFields">A comma-separated list of the fields you wish to have populated in the audio 
            tracks contained in the returned object. </param>
            <returns>The collection of audio tracks specified by the reference ids provided.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByReferenceIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple audio tracks based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The list of reference ids for the audio tracks we'd like to retrieve</param>
            <returns>The collection of audio tracks specified by the reference ids provided.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Performs a search on all the tags of the audio tracks in this account, and returns a collection of audio tracks that 
            contain the specified tags. Note that tags are case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. 
            The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results. In this method, results can be sorted only by MODIFIED_DATE 
            and PLAYS_TRAILING_WEEK.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained 
            in the returned object.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Performs a search on all the tags of the audio tracks in this account, and returns a collection of audio tracks that 
            contain the specified tags. Note that tags are case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. 
            The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results. In this method, results can be sorted only by MODIFIED_DATE 
            and PLAYS_TRAILING_WEEK.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained 
            in the returned object.</param>
            <returns>A collection of audio tracks whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder)">
            <summary>
            Performs a search on all the tags of the audio tracks in this account, and returns a collection of audio tracks that 
            contain the specified tags. Note that tags are case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. 
            The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results. In this method, results can be sorted only by MODIFIED_DATE 
            and PLAYS_TRAILING_WEEK.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <returns>A collection of audio tracks whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy)">
            <summary>
            Performs a search on all the tags of the audio tracks in this account, and returns a collection of audio tracks that 
            contain the specified tags. Note that tags are case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. 
            The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results. In this method, results can be sorted only by MODIFIED_DATE 
            and PLAYS_TRAILING_WEEK.</param>
            <returns>A collection of audio tracks whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32)">
            <summary>
            Performs a search on all the tags of the audio tracks in this account, and returns a collection of audio tracks that 
            contain the specified tags. Note that tags are case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. 
            The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>A collection of audio tracks whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Performs a search on all the tags of the audio tracks in this account, and returns a collection of audio tracks that 
            contain the specified tags. Note that tags are case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <returns>A collection of audio tracks whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByTags(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Performs a search on all the tags of the audio tracks in this account, and returns a collection of audio tracks that 
            contain the specified tags. Note that tags are case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <returns>A collection of audio tracks whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByText(System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Searches through all the audio tracks in this account, and returns a collection of audio tracks whose name, short description, 
            or long description contain a match for the specified text.
            </summary>
            <param name="text">The text we're searching for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. 
            The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained in the returned object. </param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of audio tracks whose name, short description, or long description contain a match for the text specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByText(System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Searches through all the audio tracks in this account, and returns a collection of audio tracks whose name, short description, 
            or long description contain a match for the specified text.
            </summary>
            <param name="text">The text we're searching for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. 
            The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained in the returned object. </param>
            <returns>A collection of audio tracks whose name, short description, or long description contain a match for the text specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByText(System.String,System.Int32,System.Int32)">
            <summary>
            Searches through all the audio tracks in this account, and returns a collection of audio tracks whose name, short description, 
            or long description contain a match for the specified text.
            </summary>
            <param name="text">The text we're searching for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. 
            The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>A collection of audio tracks whose name, short description, or long description contain a match for the text specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTracksByText(System.String)">
            <summary>
            Searches through all the audio tracks in this account, and returns a collection of audio tracks whose name, short description, 
            or long description contain a match for the specified text.
            </summary>
            <param name="text">The text we're searching for.</param>
            <returns>A collection of audio tracks whose name, short description, or long description contain a match for the text specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedAudioTracks(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Gets all the audio tracks that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Audio Track which you would like returned, specified in UTC.</param>
            <param name="filters">A comma-separated list of filters, specifying which categories of audio tracks you would 
            like returned. Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy 
            the request. The maximum page size is 25.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks 
            contained in the returned object.</param>
            <param name="getItemCount">If true, also return how many total results there are in this campaign.</param>
            <returns>All audio tracks that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedAudioTracks(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all the audio tracks that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Audio Track which you would like returned, specified in UTC.</param>
            <param name="filters">A comma-separated list of filters, specifying which categories of audio tracks you would 
            like returned. Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy 
            the request. The maximum page size is 25.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks 
            contained in the returned object.</param>
            <returns>All audio tracks that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedAudioTracks(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder)">
            <summary>
            Gets all the audio tracks that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Audio Track which you would like returned, specified in UTC.</param>
            <param name="filters">A comma-separated list of filters, specifying which categories of audio tracks you would 
            like returned. Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy 
            the request. The maximum page size is 25.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <returns>All audio tracks that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedAudioTracks(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy)">
            <summary>
            Gets all the audio tracks that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Audio Track which you would like returned, specified in UTC.</param>
            <param name="filters">A comma-separated list of filters, specifying which categories of audio tracks you would 
            like returned. Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy 
            the request. The maximum page size is 25.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <returns>All audio tracks that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedAudioTracks(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter},System.Int32,System.Int32)">
            <summary>
            Gets all the audio tracks that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Audio Track which you would like returned, specified in UTC.</param>
            <param name="filters">A comma-separated list of filters, specifying which categories of audio tracks you would 
            like returned. Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy 
            the request. The maximum page size is 25.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>All audio tracks that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedAudioTracks(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter})">
            <summary>
            Gets all the audio tracks that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Audio Track which you would like returned, specified in UTC.</param>
            <param name="filters">A comma-separated list of filters, specifying which categories of audio tracks you would 
            like returned. Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <returns>All audio tracks that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedAudioTracks(System.DateTime)">
            <summary>
            Gets all the audio tracks that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Audio Track which you would like returned, specified in UTC.</param>
            <returns>All audio tracks that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.CreateAudioTrack(BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo)">
            <summary>
            Creates a new audio track in Brightcove by uploading a file.
            </summary>
            <param name="audioTrack">The audio track to create</param>
            <param name="fileUploadInfo">Information for the file to be uploaded.</param>
            <returns>The numeric ID of the uploaded track</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.CreateAudioTrack(BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack,System.String)">
            <summary>
            Creates a new audio track in Brightcove by uploading a file.
            </summary>
            <param name="audioTrack">The audio track to create</param>
            <param name="fileToUpload">The full path to the file to be uploaded.</param>
            <returns>The numeric ID of the uploaded track</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddAudioImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo,System.Int64,System.Boolean)">
            <summary>
            Add a thumbnail asset to the specified audio track.
            </summary>
            <param name="image">A BrightcoveImage containing the metadata for the image you'd like to create (or update).</param>
            <param name="fileUploadInfo">Information for the file to be uploaded.</param>
            <param name="audioTrackId">The ID of the audio track to which you'd like to assign the image.</param>
            <param name="resize">Set this to false if you don't want your image to be automatically resized to the default size for its type. 
            By default images will be resized.</param>
            <returns>The image that was added or updated.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddAudioImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo,System.String,System.Boolean)">
            <summary>
            Add a thumbnail asset to the specified audio track.
            </summary>
            <param name="image">A BrightcoveImage containing the metadata for the image you'd like to create (or update).</param>
            <param name="fileUploadInfo">Information for the file to be uploaded.</param>
            <param name="audioTrackReferenceId">The reference ID of the audio track to which you'd like to assign the image.</param>
            <param name="resize">Set this to false if you don't want your image to be automatically resized to the default size for its type. 
            By default images will be resized.</param>
            <returns>The image that was added or updated.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddAudioImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,System.String,System.Int64,System.Boolean)">
            <summary>
            Add a thumbnail asset to the specified audio track.
            </summary>
            <param name="image">A BrightcoveImage containing the metadata for the image you'd like to create (or update).</param>
            <param name="fileToUpload">The full path of the file to be uploaded.</param>
            <param name="audioTrackId">The ID of the audio track to which you'd like to assign the image.</param>
            <param name="resize">Set this to false if you don't want your image to be automatically resized to the default size for its type. 
            By default images will be resized.</param>
            <returns>The image that was added or updated.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddAudioImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,System.String,System.String,System.Boolean)">
            <summary>
            Add a thumbnail asset to the specified audio track.
            </summary>
            <param name="image">A BrightcoveImage containing the metadata for the image you'd like to create (or update).</param>
            <param name="fileToUpload">The full path of the file to be uploaded.</param>
            <param name="audioTrackReferenceId">The reference ID of the audio track to which you'd like to assign the image.</param>
            <param name="resize">Set this to false if you don't want your image to be automatically resized to the default size for its type. 
            By default images will be resized.</param>
            <returns>The image that was added or updated.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddAudioImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,System.String,System.Int64)">
            <summary>
            Add a thumbnail asset to the specified audio track.
            </summary>
            <param name="image">A BrightcoveImage containing the metadata for the image you'd like to create (or update).</param>
            <param name="fileToUpload">The full path of the file to be uploaded.</param>
            <param name="audioTrackId">The ID of the audio track to which you'd like to assign the image.</param>
            <returns>The image that was added or updated.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddAudioImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,System.String,System.String)">
            <summary>
            Add a thumbnail asset to the specified audio track.
            </summary>
            <param name="image">A BrightcoveImage containing the metadata for the image you'd like to create (or update).</param>
            <param name="fileToUpload">The full path of the file to be uploaded.</param>
            <param name="audioTrackReferenceId">The reference ID of the audio track to which you'd like to assign the image.</param>
            <returns>The image that was added or updated.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.DoAddAudioImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo,System.Int64,System.String,System.Boolean)">
            <summary>
            Add a thumbnail asset to the specified audio track.
            </summary>
            <param name="image">A BrightcoveImage containing the metadata for the image you'd like to create (or update).</param>
            <param name="fileUploadInfo">Information for the file to be uploaded.</param>
            <param name="audioTrackId">The ID of the audio track to which you'd like to assign the image.</param>
            <param name="audioTrackReferenceId">The reference ID of the audio track to which you'd like to assign the image.</param>
            <param name="resize">Set this to false if you don't want your image to be automatically resized to the default size for its type. 
            By default images will be resized.</param>
            <returns>The image that was added or updated.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.UpdateAudioTrack(BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack)">
            <summary>
            Updates the audio track information for a Brightcove audio track.
            </summary>
            <param name="audioTrack"></param>
            <returns>The updated BrightcoveAudioTrack</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.GetAudioTrackUploadStatus(System.String)">
            <summary>
            Gets the audiotrack upload status. 
            </summary>
            <param name="referenceId">The reference id.</param>
            <returns>The status of the upload</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.DeleteAudioTrack(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Deletes an <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see>, specified by ID.
            </summary>
            <param name="audioTrackId">The ID of the <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> you'd like to delete</param>
            <param name="cascade">If true, <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> will be deleted even if it is part of a manual playlist or assigned to 
            a player. The <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> will be removed from all playlists and players in which it appears, then deleted.</param>
            <param name="deleteShares">Set this to true if you want also to delete shared copies of this <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see>. Note that 
            this will delete all shared copies from your account, as well as from all accounts with which the <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> has 
            been shared, regardless of whether or not those accounts are currently using the <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> in playlists or players.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.DeleteAudioTrack(System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes a <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see>, specified by the reference ID.
            </summary>
            <param name="referenceId">The reference ID of the <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> you'd like to delete</param>
            <param name="cascade">If true, <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> will be deleted even if it is part of a manual playlist or assigned to 
            a player. The <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> will be removed from all playlists and players in which it appears, then deleted.</param>
            <param name="deleteShares">Set this to true if you want also to delete shared copies of this <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see>. Note that 
            this will delete all shared copies from your account, as well as from all accounts with which the <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> has 
            been shared, regardless of whether or not those accounts are currently using the <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> in playlists or players.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.DoDeleteAudioTrack(System.Int64,System.String,System.Boolean,System.Boolean)">
            <summary>
            Figures out whether the user wants to delete an audio track by ID or reference Id, then performs the action.
            </summary>
            <param name="audioTrackId">The ID of the <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> you'd like to delete</param>
            <param name="referenceId">The reference ID of the <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> you'd like to delete</param>
            <param name="cascade">If true, <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> will be deleted even if it is part of a manual playlist or assigned to 
            a player. The <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> will be removed from all playlists and players in which it appears, then deleted.</param>
            <param name="deleteShares">Set this to true if you want also to delete shared copies of this <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see>. Note that 
            this will delete all shared copies from your account, as well as from all accounts with which the <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> has 
            been shared, regardless of whether or not those accounts are currently using the <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">audio track</see> in playlists or players.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.CreatePlaylist(BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist)">
            <summary>
            Creates a playlist
            </summary>
            <param name="playlist">The playlist you'd like to create.</param>
            <returns>The ID of the newly created playlist.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.UpdatePlaylist(BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist)">
            <summary>
            Updates a playlist, specified by playlist ID or reference ID. Either a playlist ID or a reference ID must be 
            supplied. If you are updating the value of the reference ID, then both the playlist ID and reference ID must be supplied.
            </summary>
            <param name="playlist">The playlist you'd like to update.</param>
            <returns>The playlist that was updated</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.DeletePlaylist(System.Int64,System.Boolean)">
            <summary>
            Deletes a playlist, specified by playlist ID
            </summary>
            <param name="playlistId">The ID of the playlist you'd like to delete</param>
            <param name="cascade">If true, playlist will be deleted even if it is referenced by players. The playlist will 
            be removed from all players in which it appears, then deleted.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.DeletePlaylist(System.String,System.Boolean)">
            <summary>
            Deletes a playlist, specified by the playlist's Reference ID
            </summary>
            <param name="referenceId">The Reference ID of the playlist you'd like to delete</param>
            <param name="cascade">If true, playlist will be deleted even if it is referenced by players. The playlist will 
            be removed from all players in which it appears, then deleted.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoById(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds a single video with the specified id.
            </summary>
            <param name="videoId">The id of the video you would like to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Videos: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If 
            you use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you include 
            the value 'customFields' in the video_fields parameter.</param>
            <returns>The Video you requested, with the specified fields populated, or null, if there is no video with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoById(System.Int64,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds a single video with the specified id.
            </summary>
            <param name="videoId">The id of the video you would like to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Videos: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If 
            you use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>The Video you requested, with the specified fields populated, or null, if there is no video with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoById(System.Int64)">
            <summary>
            Finds a single video with the specified id.
            </summary>
            <param name="videoId">The id of the video you would like to retrieve.</param>
            <returns>The Video you requested, with the specified fields populated, or null, if there is no video with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByIds(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple videos, given their ids.
            </summary>
            <param name="videoIds">The list of video ids for the videos to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Video: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If you
            use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the 
            videos contained in the returned object. If you omit this parameter, no custom fields are returned, unless 
            you include the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection that contains the video objects corresponding to the video ids given. Note that if 
            you pass in ids that belong to videos that are either not active or not playable because of schedule 
            constraints, then the ItemCollection will contain null elements for the ids that are filtered out.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByIds(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple videos, given their ids.
            </summary>
            <param name="videoIds">The list of video ids for the videos to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Video: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If you
            use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>A collection that contains the video objects corresponding to the video ids given. Note that if 
            you pass in ids that belong to videos that are either not active or not playable because of schedule 
            constraints, then the ItemCollection will contain null elements for the ids that are filtered out.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByIds(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Find multiple videos, given their ids.
            </summary>
            <param name="videoIds">The list of video ids for the videos to retrieve.</param>
            <returns>A collection that contains the video objects corresponding to the video ids given. Note that if 
            you pass in ids that belong to videos that are either not active or not playable because of schedule 
            constraints, then the ItemCollection will contain null elements for the ids that are filtered out.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByReferenceId(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find a video based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The publisher-assigned reference id for the video we're searching for.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos contained in the returned object. 
            If you omit this parameter, the method returns the following fields of the Video: id, name, shortDescription, 
            longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL,
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL access, this method also returns 
            FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos contained in the returned 
            object. If you omit this parameter, no custom fields are returned, unless you include the value 'customFields' in the 
            video_fields parameter.</param>
            <returns>The video whose reference id matches the one given.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByReferenceId(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find a video based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The publisher-assigned reference id for the video we're searching for.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos contained in the returned object. 
            If you omit this parameter, the method returns the following fields of the Video: id, name, shortDescription, 
            longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL,
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL access, this method also returns 
            FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>The video whose reference id matches the one given.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByReferenceId(System.String)">
            <summary>
            Find a video based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The publisher-assigned reference id for the video we're searching for.</param>
            <returns>The video whose reference id matches the one given.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByReferenceIds(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple videos based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The list of reference ids for the videos to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Video: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If you
            use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the 
            videos contained in the returned object. If you omit this parameter, no custom fields are returned, unless 
            you include the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection of videos matching the specified reference ids. Note that if you pass in ids 
            that belong to videos that are either not active or not playable because of schedule constraints, then 
            the collection will contain null elements for the ids that are filtered out.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByReferenceIds(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple videos based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The list of reference ids for the videos to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Video: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If you
            use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>A collection of videos matching the specified reference ids. Note that if you pass in ids 
            that belong to videos that are either not active or not playable because of schedule constraints, then 
            the collection will contain null elements for the ids that are filtered out.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByReferenceIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple videos based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The list of reference ids for the videos to retrieve.</param>
            <returns>A collection of videos matching the specified reference ids. Note that if you pass in ids 
            that belong to videos that are either not active or not playable because of schedule constraints, then 
            the collection will contain null elements for the ids that are filtered out.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllVideos(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Find all videos in the Brightcove media library for this account.
            </summary>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Video: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If you
            use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the 
            videos contained in the returned object. If you omit this parameter, no custom fields are returned, unless 
            you include the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of videos matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllVideos(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find all videos in the Brightcove media library for this account.
            </summary>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Video: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If you
            use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the 
            videos contained in the returned object. If you omit this parameter, no custom fields are returned, unless 
            you include the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection of videos matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllVideos(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find all videos in the Brightcove media library for this account.
            </summary>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Video: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If you
            use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>A collection of videos matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllVideos(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder)">
            <summary>
            Find all videos in the Brightcove media library for this account.
            </summary>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <returns>A collection of videos matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllVideos(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy)">
            <summary>
            Find all videos in the Brightcove media library for this account.
            </summary>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <returns>A collection of videos matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllVideos(System.Int32,System.Int32)">
            <summary>
            Find all videos in the Brightcove media library for this account.
            </summary>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>A collection of videos matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllVideos">
            <summary>
            Find all videos in the Brightcove media library for this account.
            </summary>
            <returns>A collection of videos matching the specified search criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SearchVideos(System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Int32,System.Int32,System.Boolean,BrightcoveMapiWrapper.Model.Containers.SortedFieldDictionary,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Searches videos according to the criteria provided by the user.
            </summary>
            <param name="all">Specifies the field:value pairs for search criteria that MUST be present in 
            the index in order to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="any">Specifies the field:value pairs for search criteria AT LEAST ONE of which 
            must be present to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="none">Specifies the field:value pairs for search criteria that MUST NOT be present 
            to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="pageSize">Number of items returned per page. (max 100)</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="exact">If true, disables fuzzy search and requires an exact match of search terms. 
            A fuzzy search does not require an exact match of the indexed terms, but will return a hit for 
            terms that are closely related based on language-specific criteria. The fuzzy search is 
            available only if your account is based in the United States.</param>
            <param name="sortFields">Specifies the <see cref="T:BrightcoveMapiWrapper.Model.Containers.SortedFieldDictionary"/> by which to sort results.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos contained 
            in the returned object. If you omit this parameter, the method returns the following fields of 
            the video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, 
            linkURL, linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, 
            playsTrailingWeek. If you use a token with URL access, this method also returns FLVURL, renditions, 
            FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you 
            include the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of videos matching the specified criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SearchVideos(System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Int32,System.Int32,System.Boolean,BrightcoveMapiWrapper.Model.Containers.SortedFieldDictionary,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Searches videos according to the criteria provided by the user.
            </summary>
            <param name="all">Specifies the field:value pairs for search criteria that MUST be present in 
            the index in order to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="any">Specifies the field:value pairs for search criteria AT LEAST ONE of which 
            must be present to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="none">Specifies the field:value pairs for search criteria that MUST NOT be present 
            to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="pageSize">Number of items returned per page. (max 100)</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="exact">If true, disables fuzzy search and requires an exact match of search terms. 
            A fuzzy search does not require an exact match of the indexed terms, but will return a hit for 
            terms that are closely related based on language-specific criteria. The fuzzy search is 
            available only if your account is based in the United States.</param>
            <param name="sortFields">Specifies the unique list of fields by which to sort results.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos contained 
            in the returned object. If you omit this parameter, the method returns the following fields of 
            the video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, 
            linkURL, linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, 
            playsTrailingWeek. If you use a token with URL access, this method also returns FLVURL, renditions, 
            FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you 
            include the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection of videos matching the specified criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SearchVideos(System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Int32,System.Int32,System.Boolean,BrightcoveMapiWrapper.Model.Containers.SortedFieldDictionary,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Searches videos according to the criteria provided by the user.
            </summary>
            <param name="all">Specifies the field:value pairs for search criteria that MUST be present in 
            the index in order to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="any">Specifies the field:value pairs for search criteria AT LEAST ONE of which 
            must be present to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="none">Specifies the field:value pairs for search criteria that MUST NOT be present 
            to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="pageSize">Number of items returned per page. (max 100)</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="exact">If true, disables fuzzy search and requires an exact match of search terms. 
            A fuzzy search does not require an exact match of the indexed terms, but will return a hit for 
            terms that are closely related based on language-specific criteria. The fuzzy search is 
            available only if your account is based in the United States.</param>
            <param name="sortFields">Specifies the unique list of fields by which to sort results.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos contained 
            in the returned object. If you omit this parameter, the method returns the following fields of 
            the video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, 
            linkURL, linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, 
            playsTrailingWeek. If you use a token with URL access, this method also returns FLVURL, renditions, 
            FLVFullLength, videoFullLength.</param>
            <returns>A collection of videos matching the specified criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SearchVideos(System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Int32,System.Int32,System.Boolean,BrightcoveMapiWrapper.Model.Containers.SortedFieldDictionary)">
            <summary>
            Searches videos according to the criteria provided by the user.
            </summary>
            <param name="all">Specifies the field:value pairs for search criteria that MUST be present in 
            the index in order to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="any">Specifies the field:value pairs for search criteria AT LEAST ONE of which 
            must be present to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="none">Specifies the field:value pairs for search criteria that MUST NOT be present 
            to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="pageSize">Number of items returned per page. (max 100)</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="exact">If true, disables fuzzy search and requires an exact match of search terms. 
            A fuzzy search does not require an exact match of the indexed terms, but will return a hit for 
            terms that are closely related based on language-specific criteria. The fuzzy search is 
            available only if your account is based in the United States.</param>
            <param name="sortFields">Specifies the unique list of fields by which to sort results.</param>
            <returns>A collection of videos matching the specified criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SearchVideos(System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Int32,System.Int32,System.Boolean,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Searches videos according to the criteria provided by the user.
            </summary>
            <param name="all">Specifies the field:value pairs for search criteria that MUST be present in 
            the index in order to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="any">Specifies the field:value pairs for search criteria AT LEAST ONE of which 
            must be present to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="none">Specifies the field:value pairs for search criteria that MUST NOT be present 
            to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="pageSize">Number of items returned per page. (max 100)</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="exact">If true, disables fuzzy search and requires an exact match of search terms. 
            A fuzzy search does not require an exact match of the indexed terms, but will return a hit for 
            terms that are closely related based on language-specific criteria. The fuzzy search is 
            available only if your account is based in the United States.</param>
            <param name="sortBy">Specifies the field by which to sort results.</param>
            <param name="sortOrder">Specifies the direction in which to sort results.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos contained 
            in the returned object. If you omit this parameter, the method returns the following fields of 
            the video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, 
            linkURL, linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, 
            playsTrailingWeek. If you use a token with URL access, this method also returns FLVURL, renditions, 
            FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you 
            include the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of videos matching the specified criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SearchVideos(System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Int32,System.Int32,System.Boolean,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Searches videos according to the criteria provided by the user.
            </summary>
            <param name="all">Specifies the field:value pairs for search criteria that MUST be present in 
            the index in order to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="any">Specifies the field:value pairs for search criteria AT LEAST ONE of which 
            must be present to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="none">Specifies the field:value pairs for search criteria that MUST NOT be present 
            to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="pageSize">Number of items returned per page. (max 100)</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="exact">If true, disables fuzzy search and requires an exact match of search terms. 
            A fuzzy search does not require an exact match of the indexed terms, but will return a hit for 
            terms that are closely related based on language-specific criteria. The fuzzy search is 
            available only if your account is based in the United States.</param>
            <param name="sortBy">Specifies the field by which to sort results.</param>
            <param name="sortOrder">Specifies the direction in which to sort results.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos contained 
            in the returned object. If you omit this parameter, the method returns the following fields of 
            the video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, 
            linkURL, linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, 
            playsTrailingWeek. If you use a token with URL access, this method also returns FLVURL, renditions, 
            FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you 
            include the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection of videos matching the specified criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SearchVideos(System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Int32,System.Int32,System.Boolean,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Searches videos according to the criteria provided by the user.
            </summary>
            <param name="all">Specifies the field:value pairs for search criteria that MUST be present in 
            the index in order to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="any">Specifies the field:value pairs for search criteria AT LEAST ONE of which 
            must be present to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="none">Specifies the field:value pairs for search criteria that MUST NOT be present 
            to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="pageSize">Number of items returned per page. (max 100)</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="exact">If true, disables fuzzy search and requires an exact match of search terms. 
            A fuzzy search does not require an exact match of the indexed terms, but will return a hit for 
            terms that are closely related based on language-specific criteria. The fuzzy search is 
            available only if your account is based in the United States.</param>
            <param name="sortBy">Specifies the field by which to sort results.</param>
            <param name="sortOrder">Specifies the direction in which to sort results.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos contained 
            in the returned object. If you omit this parameter, the method returns the following fields of 
            the video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, 
            linkURL, linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, 
            playsTrailingWeek. If you use a token with URL access, this method also returns FLVURL, renditions, 
            FLVFullLength, videoFullLength.</param>
            <returns>A collection of videos matching the specified criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SearchVideos(System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Int32,System.Int32,System.Boolean,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder)">
            <summary>
            Searches videos according to the criteria provided by the user.
            </summary>
            <param name="all">Specifies the field:value pairs for search criteria that MUST be present in 
            the index in order to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="any">Specifies the field:value pairs for search criteria AT LEAST ONE of which 
            must be present to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="none">Specifies the field:value pairs for search criteria that MUST NOT be present 
            to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="pageSize">Number of items returned per page. (max 100)</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="exact">If true, disables fuzzy search and requires an exact match of search terms. 
            A fuzzy search does not require an exact match of the indexed terms, but will return a hit for 
            terms that are closely related based on language-specific criteria. The fuzzy search is 
            available only if your account is based in the United States.</param>
            <param name="sortBy">Specifies the field by which to sort results.</param>
            <param name="sortOrder">Specifies the direction in which to sort results.</param>
            <returns>A collection of videos matching the specified criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SearchVideos(System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Searches videos according to the criteria provided by the user.
            </summary>
            <param name="all">Specifies the field:value pairs for search criteria that MUST be present in 
            the index in order to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="any">Specifies the field:value pairs for search criteria AT LEAST ONE of which 
            must be present to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="none">Specifies the field:value pairs for search criteria that MUST NOT be present 
            to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="pageSize">Number of items returned per page. (max 100)</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="exact">If true, disables fuzzy search and requires an exact match of search terms. 
            A fuzzy search does not require an exact match of the indexed terms, but will return a hit for 
            terms that are closely related based on language-specific criteria. The fuzzy search is 
            available only if your account is based in the United States.</param>
            <returns>A collection of videos matching the specified criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SearchVideos(System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Int32,System.Int32)">
            <summary>
            Searches videos according to the criteria provided by the user.
            </summary>
            <param name="all">Specifies the field:value pairs for search criteria that MUST be present in 
            the index in order to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="any">Specifies the field:value pairs for search criteria AT LEAST ONE of which 
            must be present to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="none">Specifies the field:value pairs for search criteria that MUST NOT be present 
            to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="pageSize">Number of items returned per page. (max 100)</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>A collection of videos matching the specified criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SearchVideos(System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair},System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.Containers.FieldValuePair})">
            <summary>
            Searches videos according to the criteria provided by the user.
            </summary>
            <param name="all">Specifies the field:value pairs for search criteria that MUST be present in 
            the index in order to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="any">Specifies the field:value pairs for search criteria AT LEAST ONE of which 
            must be present to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <param name="none">Specifies the field:value pairs for search criteria that MUST NOT be present 
            to return a hit in the result set. If the field's name is not present, it will 
            search among the name, shortDescription, and longDescription fields by default.</param>
            <returns>A collection of videos matching the specified criteria.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindRelatedVideos(System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Finds videos related to the given video. Combines the name and short description of the given 
            video and searches for any partial matches in the name, description, and tags of all videos in 
            the Brightcove media library for this account.
            </summary>
            <param name="searchParam">The parameter by which related videos are determined.</param>
            <param name="searchValue">The parameter value by which related videos are determined.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of videos, ordered by relevance to the provided video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindRelatedVideosById(System.Int64,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Finds videos related to the given video. Combines the name and short description of the given 
            video and searches for any partial matches in the name, description, and tags of all videos in 
            the Brightcove media library for this account.
            </summary>
            <param name="videoId">The id of the video we'd like related videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of videos, ordered by relevance to the provided video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindRelatedVideosById(System.Int64,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds videos related to the given video. Combines the name and short description of the given 
            video and searches for any partial matches in the name, description, and tags of all videos in 
            the Brightcove media library for this account.
            </summary>
            <param name="videoId">The id of the video we'd like related videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection of videos, ordered by relevance to the provided video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindRelatedVideosById(System.Int64,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds videos related to the given video. Combines the name and short description of the given 
            video and searches for any partial matches in the name, description, and tags of all videos in 
            the Brightcove media library for this account.
            </summary>
            <param name="videoId">The id of the video we'd like related videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>A collection of videos, ordered by relevance to the provided video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindRelatedVideosById(System.Int64,System.Int32,System.Int32)">
            <summary>
            Finds videos related to the given video. Combines the name and short description of the given 
            video and searches for any partial matches in the name, description, and tags of all videos in 
            the Brightcove media library for this account.
            </summary>
            <param name="videoId">The id of the video we'd like related videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return</param>
            <returns>A collection of videos, ordered by relevance to the provided video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindRelatedVideosById(System.Int64)">
            <summary>
            Finds videos related to the given video. Combines the name and short description of the given 
            video and searches for any partial matches in the name, description, and tags of all videos in 
            the Brightcove media library for this account.
            </summary>
            <param name="videoId">The id of the video we'd like related videos for.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindRelatedVideosByReferenceId(System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Finds videos related to the given video. Combines the name and short description of the given 
            video and searches for any partial matches in the name, description, and tags of all videos in 
            the Brightcove media library for this account.
            </summary>
            <param name="referenceId">The reference id of the video we'd like related videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of videos, ordered by relevance to the provided video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindRelatedVideosByReferenceId(System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds videos related to the given video. Combines the name and short description of the given 
            video and searches for any partial matches in the name, description, and tags of all videos in 
            the Brightcove media library for this account.
            </summary>
            <param name="referenceId">The reference id of the video we'd like related videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection of videos, ordered by relevance to the provided video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindRelatedVideosByReferenceId(System.String,System.Int32,System.Int32)">
            <summary>
            Finds videos related to the given video. Combines the name and short description of the given 
            video and searches for any partial matches in the name, description, and tags of all videos in 
            the Brightcove media library for this account.
            </summary>
            <param name="referenceId">The reference id of the video we'd like related videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return</param>
            <returns>A collection of videos, ordered by relevance to the provided video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindRelatedVideosByReferenceId(System.String)">
            <summary>
            Finds videos related to the given video. Combines the name and short description of the given 
            video and searches for any partial matches in the name, description, and tags of all videos in 
            the Brightcove media library for this account.
            </summary>
            <param name="referenceId">The reference id of the video we'd like related videos for.</param>
            <returns>A collection of videos, ordered by relevance to the provided video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByUserId(System.String,System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Retrieves the videos uploaded by the specified user id. This method can be used to find videos submitted using
            the consumer-generated media (CGM) module.
            </summary>
            <param name="userId">The id of the user whose videos we'd like to retrieve.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the 
            request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>An ItemCollection representing the requested page of Videos uploaded by the specified user, 
            in the order specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByUserId(System.String,System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieves the videos uploaded by the specified user id. This method can be used to find videos submitted using
            the consumer-generated media (CGM) module.
            </summary>
            <param name="userId">The id of the user whose videos we'd like to retrieve.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the 
            request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <returns>An ItemCollection representing the requested page of Videos uploaded by the specified user, 
            in the order specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByUserId(System.String,System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieves the videos uploaded by the specified user id. This method can be used to find videos submitted using
            the consumer-generated media (CGM) module.
            </summary>
            <param name="userId">The id of the user whose videos we'd like to retrieve.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the 
            request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>An ItemCollection representing the requested page of Videos uploaded by the specified user, 
            in the order specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByUserId(System.String,System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder)">
            <summary>
            Retrieves the videos uploaded by the specified user id. This method can be used to find videos submitted using
            the consumer-generated media (CGM) module.
            </summary>
            <param name="userId">The id of the user whose videos we'd like to retrieve.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the 
            request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <returns>An ItemCollection representing the requested page of Videos uploaded by the specified user, 
            in the order specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByUserId(System.String,System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy)">
            <summary>
            Retrieves the videos uploaded by the specified user id. This method can be used to find videos submitted using
            the consumer-generated media (CGM) module.
            </summary>
            <param name="userId">The id of the user whose videos we'd like to retrieve.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the 
            request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <returns>An ItemCollection representing the requested page of Videos uploaded by the specified user, 
            in the order specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByUserId(System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves the videos uploaded by the specified user id. This method can be used to find videos submitted using
            the consumer-generated media (CGM) module.
            </summary>
            <param name="userId">The id of the user whose videos we'd like to retrieve.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the 
            request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>An ItemCollection representing the requested page of Videos uploaded by the specified user, 
            in the order specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByUserId(System.String)">
            <summary>
            Retrieves the videos uploaded by the specified user id. This method can be used to find videos submitted using
            the consumer-generated media (CGM) module.
            </summary>
            <param name="userId">The id of the user whose videos we'd like to retrieve.</param>
            <returns>An ItemCollection representing the requested page of Videos uploaded by the specified user, 
            in the order specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByCampaignId(System.Int64,System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Gets all the videos associated with the given campaign id. Campaigns are a feature of the consumer-generated media (CGM) module
            </summary>
            <param name="campaignId">The id of the campaign you'd like to fetch videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. The 
            maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are in this campaign.</param>
            <returns>The requested subset of all videos for the given campaign.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByCampaignId(System.Int64,System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all the videos associated with the given campaign id. Campaigns are a feature of the consumer-generated media (CGM) module
            </summary>
            <param name="campaignId">The id of the campaign you'd like to fetch videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. The 
            maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <returns>The requested subset of all videos for the given campaign.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByCampaignId(System.Int64,System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all the videos associated with the given campaign id. Campaigns are a feature of the consumer-generated media (CGM) module
            </summary>
            <param name="campaignId">The id of the campaign you'd like to fetch videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. The 
            maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>The requested subset of all videos for the given campaign.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByCampaignId(System.Int64,System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder)">
            <summary>
            Gets all the videos associated with the given campaign id. Campaigns are a feature of the consumer-generated media (CGM) module
            </summary>
            <param name="campaignId">The id of the campaign you'd like to fetch videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. The 
            maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <returns>The requested subset of all videos for the given campaign.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByCampaignId(System.Int64,System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy)">
            <summary>
            Gets all the videos associated with the given campaign id. Campaigns are a feature of the consumer-generated media (CGM) module
            </summary>
            <param name="campaignId">The id of the campaign you'd like to fetch videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. The 
            maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <returns>The requested subset of all videos for the given campaign.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByCampaignId(System.Int64,System.Int32,System.Int32)">
            <summary>
            Gets all the videos associated with the given campaign id. Campaigns are a feature of the consumer-generated media (CGM) module
            </summary>
            <param name="campaignId">The id of the campaign you'd like to fetch videos for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the request. The 
            maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>The requested subset of all videos for the given campaign.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByCampaignId(System.Int64)">
            <summary>
            Gets all the videos associated with the given campaign id. Campaigns are a feature of the consumer-generated media (CGM) module
            </summary>
            <param name="campaignId">The id of the campaign you'd like to fetch videos for.</param>
            <returns>The requested subset of all videos for the given campaign.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedVideos(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Gets all the videos that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Video which you would like returned, specified in UTC time.</param>
            <param name="filters">A list of filters, specifying which categories of videos you would like returned. 
            Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 25.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>All videos that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedVideos(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all the videos that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Video which you would like returned, specified in UTC.</param>
            <param name="filters">A list of filters, specifying which categories of videos you would like returned. 
            Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 25.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <returns>All videos that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedVideos(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all the videos that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Video which you would like returned, specified in UTC.</param>
            <param name="filters">A list of filters, specifying which categories of videos you would like returned. 
            Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 25.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>All videos that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedVideos(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder)">
            <summary>
            Gets all the videos that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Video which you would like returned, specified in UTC.</param>
            <param name="filters">A list of filters, specifying which categories of videos you would like returned. 
            Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 25.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <returns>All videos that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedVideos(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy)">
            <summary>
            Gets all the videos that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Video which you would like returned, specified in UTC.</param>
            <param name="filters">A list of filters, specifying which categories of videos you would like returned. 
            Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 25.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <returns>All videos that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedVideos(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter},System.Int32,System.Int32)">
            <summary>
            Gets all the videos that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Video which you would like returned, specified in UTC.</param>
            <param name="filters">A list of filters, specifying which categories of videos you would like returned. 
            Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that 
            satisfy the request. The maximum page size is 25.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>All videos that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedVideos(System.DateTime,System.Collections.Generic.IEnumerable{BrightcoveMapiWrapper.Model.ModifiedVideoFilter})">
            <summary>
            Gets all the videos that have been modified since the given time.
            </summary>
            <param name="fromDate">The date of the oldest Video which you would like returned, specified in UTC.</param>
            <param name="filters">A list of filters, specifying which categories of videos you would like returned. 
            Valid filter values are PLAYABLE, UNSCHEDULED, INACTIVE, and DELETED.</param>
            <returns>All videos that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindModifiedVideos(System.DateTime)">
            <summary>
            Gets all the videos that have been modified since the given time, specified in UTC.
            </summary>
            <param name="fromDate">The date of the oldest Video which you would like returned.</param>
            <returns>All videos that have been modified since the given time.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByText(System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Searches through all the videos in this account, and returns a collection of videos whose name, short description, 
            or long description contain a match for the specified text.
            </summary>
            <param name="text">The text to search for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the 
            request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of videos whose name, short description, or long description contain a match for the text specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByText(System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Searches through all the videos in this account, and returns a collection of videos whose name, short description, 
            or long description contain a match for the specified text.
            </summary>
            <param name="text">The text to search for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the 
            request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection of videos whose name, short description, or long description contain a match for the text specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByText(System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Searches through all the videos in this account, and returns a collection of videos whose name, short description, 
            or long description contain a match for the specified text.
            </summary>
            <param name="text">The text to search for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the 
            request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>A collection of videos whose name, short description, or long description contain a match for the text specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByText(System.String,System.Int32,System.Int32)">
            <summary>
            Searches through all the videos in this account, and returns a collection of videos whose name, short description, 
            or long description contain a match for the specified text.
            </summary>
            <param name="text">The text to search for.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items that satisfy the 
            request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>A collection of videos whose name, short description, or long description contain a match for the text specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByText(System.String)">
            <summary>
            Searches through all the videos in this account, and returns a collection of videos whose name, short description, 
            or long description contain a match for the specified text.
            </summary>
            <param name="text">The text to search for.</param>
            <returns>A collection of videos whose name, short description, or long description contain a match for the text specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Performs a search on all the tags of the videos in this account, and returns a collection of videos that 
            contain the specified tags. Note that tags are not case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of videos whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Performs a search on all the tags of the videos in this account, and returns a collection of videos that 
            contain the specified tags. Note that tags are not case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated 
            in the videos contained in the returned object. If you omit this parameter, no custom fields are 
            returned, unless you include the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection of videos whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Performs a search on all the tags of the videos in this account, and returns a collection of videos that 
            contain the specified tags. Note that tags are not case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the 
            Videos contained in the returned object. If you omit this parameter, the method returns the 
            following fields of the video: id, name, shortDescription, longDescription, creationDate, 
            publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL, 
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL 
            access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>A collection of videos whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder)">
            <summary>
            Performs a search on all the tags of the videos in this account, and returns a collection of videos that 
            contain the specified tags. Note that tags are not case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <param name="sortOrder">How to order the results: ascending or descending.</param>
            <returns>A collection of videos whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy)">
            <summary>
            Performs a search on all the tags of the videos in this account, and returns a collection of videos that 
            contain the specified tags. Note that tags are not case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The field by which to sort the results.</param>
            <returns>A collection of videos whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32)">
            <summary>
            Performs a search on all the tags of the videos in this account, and returns a collection of videos that 
            contain the specified tags. Note that tags are not case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <param name="pageSize">Number of items returned per page. A page is a subset of all of the items 
            that satisfy the request. The maximum page size is 100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>A collection of videos whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByTags(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Performs a search on all the tags of the videos in this account, and returns a collection of videos that 
            contain the specified tags. Note that tags are not case-sensitive.
            </summary>
            <param name="andTags">Limit the results to those that contain all of these tags.</param>
            <param name="orTags">Limit the results to those that contain at least one of these tags.</param>
            <returns>A collection of videos whose tags match the tags specified.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByIdUnfiltered(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            Finds a single video with the specified ID. Unlike find_video_by_id, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            <param name="videoId">The ID of the video you want to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Videos: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If 
            you use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you include 
            the value 'customFields' in the video_fields parameter.</param>
            <returns>The Video you requested, with the specified fields populated, or null, if there is no video with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByIdUnfiltered(System.Int64,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds a single video with the specified ID. Unlike find_video_by_id, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
            <param name="videoId">The ID of the video you want to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Videos: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If 
            you use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>The Video you requested, with the specified fields populated, or null, if there is no video with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByIdUnfiltered(System.Int64)">
            <summary>
            Finds a single video with the specified ID. Unlike find_video_by_id, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
            <param name="videoId">The ID of the video you want to retrieve.</param>
            <returns>The Video you requested, with the specified fields populated, or null, if there is no video with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByIdsUnfiltered(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple videos, given their IDs. Unlike find_videos_by_ids, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
            <param name="videoIds">The list of video ids for the videos to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Video: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If you
            use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the 
            videos contained in the returned object. If you omit this parameter, no custom fields are returned, unless 
            you include the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection that contains the video objects corresponding to the video ids given.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByIdsUnfiltered(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple videos, given their IDs. Unlike find_videos_by_ids, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
            <param name="videoIds">The list of video ids for the videos to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Video: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If you
            use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>A collection that contains the video objects corresponding to the video ids given.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByIdsUnfiltered(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Find multiple videos, given their IDs. Unlike find_videos_by_ids, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
            <param name="videoIds">The list of video ids for the videos to retrieve.</param>
            <returns>A collection that contains the video objects corresponding to the video ids given.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByReferenceIdUnfiltered(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find a video based on its publisher-assigned reference ID. Unlike <see cref="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByReferenceId(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})"/>, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
            <param name="referenceId">The publisher-assigned reference id for the video we're searching for.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos contained in the returned object. 
            If you omit this parameter, the method returns the following fields of the Video: id, name, shortDescription, 
            longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL,
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL access, this method also returns 
            FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos contained in the returned 
            object. If you omit this parameter, no custom fields are returned, unless you include the value 'customFields' in the 
            video_fields parameter.</param>
            <returns>The video whose reference id matches the one given.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByReferenceIdUnfiltered(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find a video based on its publisher-assigned reference ID. Unlike <see cref="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByReferenceId(System.String,System.Collections.Generic.IEnumerable{System.String})"/>, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
            <param name="referenceId">The publisher-assigned reference id for the video we're searching for.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos contained in the returned object. 
            If you omit this parameter, the method returns the following fields of the Video: id, name, shortDescription, 
            longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, tags, videoStillURL, thumbnailURL,
            referenceId, length, economics, playsTotal, playsTrailingWeek. If you use a token with URL access, this method also returns 
            FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>The video whose reference id matches the one given.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByReferenceIdUnfiltered(System.String)">
            <summary>
            Find a video based on its publisher-assigned reference ID. Unlike <see cref="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideoByReferenceId(System.String)"/>, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
            <param name="referenceId">The publisher-assigned reference id for the video we're searching for.</param>
            <returns>The video whose reference id matches the one given.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByReferenceIdsUnfiltered(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple videos based on their publisher-assigned reference IDs. Unlike <see cref="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByReferenceIds(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})"/>, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
            <param name="referenceIds">The list of reference ids for the videos to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Video: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If you
            use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the 
            videos contained in the returned object. If you omit this parameter, no custom fields are returned, unless 
            you include the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection of videos matching the specified reference ids.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByReferenceIdsUnfiltered(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple videos based on their publisher-assigned reference IDs. Unlike <see cref="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByReferenceIds(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})"/>, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
            <param name="referenceIds">The list of reference ids for the videos to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the videos contained in the 
            returned object. If you omit this parameter, the method returns the following fields of the Video: id, 
            name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, linkText, 
            tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. If you
            use a token with URL access, this method also returns FLVURL, renditions, FLVFullLength, videoFullLength.</param>
            <returns>A collection of videos matching the specified reference ids.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByReferenceIdsUnfiltered(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find multiple videos based on their publisher-assigned reference IDs. Unlike <see cref="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindVideosByReferenceIds(System.Collections.Generic.IEnumerable{System.String})"/>, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
            <param name="referenceIds">The list of reference ids for the videos to retrieve.</param>
            <returns>A collection of videos matching the specified reference ids.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.CreateVideo(BrightcoveMapiWrapper.Model.Items.BrightcoveVideo,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo,BrightcoveMapiWrapper.Model.EncodeTo,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new video by uploading a file.
            </summary>
            <param name="video">The metadata for the video you want to create.</param>
            <param name="fileUploadInfo">Information for the file to be uploaded.</param>
            <param name="encodeTo">If the file requires transcoding, use this parameter to specify the target encoding. 
            Valid values are MP4 or FLV, representing the H264 and VP6 codecs respectively. Note that transcoding of 
            FLV files to another codec is not currently supported. This parameter is optional and defaults to FLV.</param>
            <param name="createMultipleRenditions">If the file is a supported transcodeable type, this optional flag can be 
            used to control the number of transcoded renditions. If true (default), multiple renditions at varying encoding 
            rates and dimensions are created. Setting this to false will cause a single transcoded VP6 rendition to be created 
            at the standard encoding rate and dimensions.</param>
            <param name="preserveSourceRendition">If the video file is H.264 encoded and if createMultipleRenditions is true, 
            then multiple VP6 renditions are created and in addition the H.264 source is retained as an additional rendition.</param>
            <param name="h264NoProcessing">Use this option to prevent H.264 source files from being transcoded. This parameter cannot
            be used in combination with create_multiple_renditions. It is optional and defaults to false.</param>
            <returns>The numeric ID of the newly created video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.CreateVideo(BrightcoveMapiWrapper.Model.Items.BrightcoveVideo,System.String,BrightcoveMapiWrapper.Model.EncodeTo,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new video by uploading a file.
            </summary>
            <param name="video">The metadata for the video you want to create.</param>
            <param name="fileToUpload">The full path to the file to be uploaded.</param>
            <param name="encodeTo">If the file requires transcoding, use this parameter to specify the target encoding. 
            Valid values are MP4 or FLV, representing the H264 and VP6 codecs respectively. Note that transcoding of 
            FLV files to another codec is not currently supported. This parameter is optional and defaults to FLV.</param>
            <param name="createMultipleRenditions">If the file is a supported transcodeable type, this optional flag can be 
            used to control the number of transcoded renditions. If true (default), multiple renditions at varying encoding 
            rates and dimensions are created. Setting this to false will cause a single transcoded VP6 rendition to be created 
            at the standard encoding rate and dimensions.</param>
            <param name="preserveSourceRendition">If the video file is H.264 encoded and if createMultipleRenditions is true, 
            then multiple VP6 renditions are created and in addition the H.264 source is retained as an additional rendition.</param>
            <param name="h264NoProcessing">Use this option to prevent H.264 source files from being transcoded. This parameter cannot
            be used in combination with create_multiple_renditions. It is optional and defaults to false.</param>
            <returns>The numeric ID of the newly created video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.CreateVideo(BrightcoveMapiWrapper.Model.Items.BrightcoveVideo,System.String,BrightcoveMapiWrapper.Model.EncodeTo,System.Boolean,System.Boolean)">
            <summary>
            Creates a new video by uploading a file.
            </summary>
            <param name="video">The metadata for the video you want to create.</param>
            <param name="fileToUpload">The full path to the file to be uploaded.</param>
            <param name="encodeTo">If the file requires transcoding, use this parameter to specify the target encoding. 
            Valid values are MP4 or FLV, representing the H264 and VP6 codecs respectively. Note that transcoding of 
            FLV files to another codec is not currently supported. This parameter is optional and defaults to FLV.</param>
            <param name="createMultipleRenditions">If the file is a supported transcodeable type, this optional flag can be 
            used to control the number of transcoded renditions. If true (default), multiple renditions at varying encoding 
            rates and dimensions are created. Setting this to false will cause a single transcoded VP6 rendition to be created 
            at the standard encoding rate and dimensions.</param>
            <param name="preserveSourceRendition">If the video file is H.264 encoded and if createMultipleRenditions is true, 
            then multiple VP6 renditions are created and in addition the H.264 source is retained as an additional rendition.</param>
            <returns>The numeric ID of the newly created video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.CreateVideo(BrightcoveMapiWrapper.Model.Items.BrightcoveVideo,System.String,BrightcoveMapiWrapper.Model.EncodeTo,System.Boolean)">
            <summary>
            Creates a new video by uploading a file.
            </summary>
            <param name="video">The metadata for the video you want to create.</param>
            <param name="fileToUpload">The full path to the file to be uploaded.</param>
            <param name="encodeTo">If the file requires transcoding, use this parameter to specify the target encoding. 
            Valid values are MP4 or FLV, representing the H264 and VP6 codecs respectively. Note that transcoding of 
            FLV files to another codec is not currently supported. This parameter is optional and defaults to FLV.</param>
            <param name="createMultipleRenditions">If the file is a supported transcodeable type, this optional flag can be 
            used to control the number of transcoded renditions. If true (default), multiple renditions at varying encoding 
            rates and dimensions are created. Setting this to false will cause a single transcoded VP6 rendition to be created 
            at the standard encoding rate and dimensions.</param>
            <returns>The numeric ID of the newly created video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.CreateVideo(BrightcoveMapiWrapper.Model.Items.BrightcoveVideo,System.String,BrightcoveMapiWrapper.Model.EncodeTo)">
            <summary>
            Creates a new video by uploading a file.
            </summary>
            <param name="video">The metadata for the video you want to create.</param>
            <param name="fileToUpload">The full path to the file to be uploaded.</param>
            <param name="encodeTo">If the file requires transcoding, use this parameter to specify the target encoding. 
            Valid values are MP4 or FLV, representing the H264 and VP6 codecs respectively. Note that transcoding of 
            FLV files to another codec is not currently supported. This parameter is optional and defaults to FLV.</param>
            <returns>The numeric ID of the newly created video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.CreateVideo(BrightcoveMapiWrapper.Model.Items.BrightcoveVideo,System.String)">
            <summary>
            Creates a new video by uploading a file.
            </summary>
            <param name="video">The metadata for the video you want to create.</param>
            <param name="fileToUpload">The full path to the file to be uploaded.</param>
            <returns>The numeric ID of the newly created video.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.UpdateVideo(BrightcoveMapiWrapper.Model.Items.BrightcoveVideo)">
            <summary>
            Updates the specified video.
            </summary>
            <param name="video"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.DeleteVideo(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Deletes a video, specified by video ID
            </summary>
            <param name="videoId">The ID of the video you'd like to delete</param>
            <param name="cascade">If true, video will be deleted even if it is part of a manual playlist or assigned to 
            a player. The video will be removed from all playlists and players in which it appears, then deleted.</param>
            <param name="deleteShares">Set this to true if you want also to delete shared copies of this video. Note that 
            this will delete all shared copies from your account, as well as from all accounts with which the video has 
            been shared, regardless of whether or not those accounts are currently using the video in playlists or players.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.DeleteVideo(System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes a video, specified by the video's reference ID
            </summary>
            <param name="referenceId">The reference ID of the video you'd like to delete</param>
            <param name="cascade">If true, video will be deleted even if it is part of a manual playlist or assigned to 
            a player. The video will be removed from all playlists and players in which it appears, then deleted.</param>
            <param name="deleteShares">Set this to true if you want also to delete shared copies of this video. Note that 
            this will delete all shared copies from your account, as well as from all accounts with which the video has 
            been shared, regardless of whether or not those accounts are currently using the video in playlists or players.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.GetUploadStatus(System.Int64)">
            <summary>
            Determines the status of an upload.
            </summary>
            <param name="videoId">The ID of the video whose status you'd like to get.</param>
            <returns>A BrightcoveUploadStatus that specifies the current state of the upload.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.GetUploadStatus(System.String)">
            <summary>
            Determines the status of an upload.
            </summary>
            <param name="referenceId">The reference ID of the video whose status you'd like to get.</param>
            <returns>A BrightcoveUploadStatus that specifies the current state of the upload.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.ShareVideo(System.Int64,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Shares the specified video with a list of sharee accounts.
            </summary>
            <param name="videoId">The id for the video that will be shared.</param>
            <param name="autoAccept">If the target account has the option enabled, setting this flag to true will bypass 
            the approval process, causing the shared video to automatically appear in the target account's library. If the 
            target account does not have the option enabled, or this flag is unspecified or false, then the shared video 
            will be queued up to be approved by the target account before appearing in their library.</param>
            <param name="forceReshare">If true, indicates that if the shared video already exists in the target account's 
            library, it should be overwritten by the video in the sharer's account.</param>
            <param name="shareeAccountIds">List of Account IDs to share video with.</param>
            <returns>List of new video IDs (one for each account ID).</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.UnshareVideo(System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Deletes the specified previously shared video from a list of sharee accounts. If a shared version of the specified video does not exist in a sharee account, no action is taken.
            </summary>
            <param name="videoId">The id for the video that is shared.</param>
            <param name="shareeAccountIds">List of Account IDs from which to stop sharing the video.</param>
            <returns>A collection of sharee account IDs for accounts previously containing shared videos specifically removed by this method.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo,System.Int64,System.Boolean)">
            <summary>
            Add a new thumbnail or video still image to a video, or assign an existing image to another video.
            </summary>
            <param name="image">The metadata for the image you'd like to create (or update).</param>
            <param name="fileUploadInfo">Information for the file to be uploaded.</param>
            <param name="videoId">The ID of the video to which you'd like to assign the image.</param>
            <param name="resize">Set this to false if you don't want your image to be automatically resized to the default size for its type. 
            By default images will be resized.</param>
            <returns>The image that was added or updated</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo,System.String,System.Boolean)">
            <summary>
            Add a new thumbnail or video still image to a video, or assign an existing image to another video.
            </summary>
            <param name="image">The metadata for the image you'd like to create (or update).</param>
            <param name="fileUploadInfo">Information for the file to be uploaded.</param>
            <param name="videoReferenceId">The reference ID of the video to which you'd like to assign the image.</param>
            <param name="resize">Set this to false if you don't want your image to be automatically resized to the default size for its type. 
            By default images will be resized.</param>
            <returns>The image that was added or updated</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,System.String,System.Int64,System.Boolean)">
            <summary>
            Add a new thumbnail or video still image to a video, or assign an existing image to another video.
            </summary>
            <param name="image">The metadata for the image you'd like to create (or update).</param>
            <param name="fileToUpload">The full path of the file to be uploaded.</param>
            <param name="videoId">The ID of the video to which you'd like to assign the image.</param>
            <param name="resize">Set this to false if you don't want your image to be automatically resized to the default size for its type. 
            By default images will be resized.</param>
            <returns>The image that was added or updated</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,System.String,System.String,System.Boolean)">
            <summary>
            Add a new thumbnail or video still image to a video, or assign an existing image to another video.
            </summary>
            <param name="image">The metadata for the image you'd like to create (or update).</param>
            <param name="fileToUpload">The full path of the file to be uploaded.</param>
            <param name="videoReferenceId">The reference ID of the video to which you'd like to assign the image.</param>
            <param name="resize">Set this to false if you don't want your image to be automatically resized to the default size for its type. 
            By default images will be resized.</param>
            <returns>The image that was added or updated</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,System.String,System.Int64)">
            <summary>
            Add a new thumbnail or video still image to a video, or assign an existing image to another video.
            </summary>
            <param name="image">The metadata for the image you'd like to create (or update).</param>
            <param name="fileToUpload">The full path of the file to be uploaded.</param>
            <param name="videoId">The ID of the video to which you'd like to assign the image.</param>
            <returns>The image that was added or updated</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddImage(BrightcoveMapiWrapper.Model.Items.BrightcoveImage,System.String,System.String)">
            <summary>
            Add a new thumbnail or video still image to a video, or assign an existing image to another video.
            </summary>
            <param name="image">The metadata for the image you'd like to create (or update).</param>
            <param name="fileToUpload">The full path of the file to be uploaded.</param>
            <param name="videoReferenceId">The reference ID of the video to which you'd like to assign the image.</param>
            <returns>The image that was added or updated</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddLogoOverlay(BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo,System.Int64)">
            <summary>
            Adds a logo overlay image to a video.
            </summary>
            <param name="logoOverlay">The metadata for the logo overlay you'd like to create (or update).</param>
            <param name="fileUploadInfo">Information for the file to be uploaded.</param>
            <param name="videoId">The ID of the video you want to assign a logo overlay to.</param>
            <returns>The newly created or updated BrightcoveLogoOverlay</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddLogoOverlay(BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo,System.String)">
            <summary>
            Adds a logo overlay image to a video.
            </summary>
            <param name="logoOverlay">The metadata for the logo overlay you'd like to create (or update).</param>
            <param name="fileUploadInfo">Information for the file to be uploaded.</param>
            <param name="videoReferenceId">The reference ID of the video you want to assign a logo overlay to.</param>
            <returns>The newly created or updated BrightcoveLogoOverlay</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddLogoOverlay(BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay,System.String,System.Int64)">
            <summary>
            Adds a logo overlay image to a video.
            </summary>
            <param name="logoOverlay">The metadata for the logo overlay you'd like to create (or update).</param>
            <param name="fileToUpload">The full path of the file to be uploaded.</param>
            <param name="videoId">The ID of the video you want to assign a logo overlay to.</param>
            <returns>The newly created or updated BrightcoveLogoOverlay</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.AddLogoOverlay(BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay,System.String,System.String)">
            <summary>
            Adds a logo overlay image to a video.
            </summary>
            <param name="logoOverlay">The metadata for the logo overlay you'd like to create (or update).</param>
            <param name="fileToUpload">The full path of the file to be uploaded.</param>
            <param name="videoReferenceId">The reference ID of the video you want to assign a logo overlay to.</param>
            <returns>The newly created or updated BrightcoveLogoOverlay</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.RemoveLogoOverlay(System.Int64)">
            <summary>
            Removes a logo overlay previously assigned to a video.
            </summary>
            <param name="videoId">The ID of the video to remove the logo overlay from.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.RemoveLogoOverlay(System.String)">
            <summary>
            Removes a logo overlay previously assigned to a video.
            </summary>
            <param name="videoReferenceId">The publisher-assigned reference ID of the video to remove 
            the logo overlay from.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.#ctor(BrightcoveMapiWrapper.Api.Connectors.IBrightcoveApiConnector)">
            <summary>
            .NET Wrapper for Brightcove's REST Media API.
            </summary>
            <param name="connector"></param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.DeserializeJson``1(System.String)">
            <summary>
            Converts json retrieved from Brightcove to an instance of the corresponding wrapper model class.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.SerializeJson``1(``0)">
            <summary>
            Converts a wrapper model class into the corresponding JSON representation.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.RunQuery``1(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Runs an API read query (HTTP GET).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parms"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.RunPost``1(BrightcoveMapiWrapper.Model.Containers.BrightcoveParamCollection)">
            <summary>
            Runs an API write (HTTP POST)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="postParams"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.RunFilePost``1(BrightcoveMapiWrapper.Model.Containers.BrightcoveParamCollection,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo)">
            <summary>
            Runs an API write (HTTP POST) that includes file data.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fileToUpload"></param>
            <param name="postParams"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.BuildBasicReadParams``1(``0)">
            <summary>
            Builds a collection of params common to all API read requests.
            </summary>
            <typeparam name="T">An enum of type <see cref="T:BrightcoveMapiWrapper.Model.BrightcoveReadMethod"/>.</typeparam>
            <param name="method">A valid <see cref="T:BrightcoveMapiWrapper.Model.BrightcoveReadMethod"/> value to perform.</param>
            <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection"/> containing the basic GET parameters.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.BuildBasicWriteParams``1(``0)">
            <summary>
            Builds a collection of params common to all API write requests.
            </summary>
            <typeparam name="T">An enum of type <see cref="T:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod"/>.</typeparam>
            <param name="method">A valid <see cref="T:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod"/> value to perform.</param>
            <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection"/> containing the basic POST parameters.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllPlaylists(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Find all playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the playlists that 
            satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The property that you'd like to sort the results by.</param>
            <param name="sortOrder">The order that you'd like the results sorted - ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you include 
            the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllPlaylists(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find all playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the playlists that 
            satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The property that you'd like to sort the results by.</param>
            <param name="sortOrder">The order that you'd like the results sorted - ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you include 
            the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllPlaylists(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find all playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the playlists that 
            satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The property that you'd like to sort the results by.</param>
            <param name="sortOrder">The order that you'd like the results sorted - ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllPlaylists(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find all playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the playlists that 
            satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The property that you'd like to sort the results by.</param>
            <param name="sortOrder">The order that you'd like the results sorted - ascending or descending.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllPlaylists(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder)">
            <summary>
            Find all playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the playlists that 
            satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The property that you'd like to sort the results by.</param>
            <param name="sortOrder">The order that you'd like the results sorted - ascending or descending.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllPlaylists(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy)">
            <summary>
            Find all playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the playlists that 
            satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The property that you'd like to sort the results by.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllPlaylists(System.Int32,System.Int32)">
            <summary>
            Find all playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the playlists that 
            satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllPlaylists">
            <summary>
            Find all playlists in this account.
            </summary>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistById(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds a particular playlist based on its id.
            </summary>
            <param name="playlistId">The id of the playlist requested.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you include 
            the value 'customFields' in the video_fields parameter.</param>
            <returns>The playlist requested, or null, if there is no playlist with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistById(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds a particular playlist based on its id.
            </summary>
            <param name="playlistId">The id of the playlist requested.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <returns>The playlist requested, or null, if there is no playlist with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistById(System.Int64,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds a particular playlist based on its id.
            </summary>
            <param name="playlistId">The id of the playlist requested.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <returns>The playlist requested, or null, if there is no playlist with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistById(System.Int64)">
            <summary>
            Finds a particular playlist based on its id.
            </summary>
            <param name="playlistId">The id of the playlist requested.</param>
            <returns>The playlist requested, or null, if there is no playlist with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsByIds(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve a set of playlists based on their ids.
            </summary>
            <param name="playlistIds">The ids of the playlists you would like retrieved.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you include 
            the value 'customFields' in the video_fields parameter.</param>
            <returns>The specified playlists, in the order of the ids you passed in. If no playlist exists for an id, 
            null is returned in its place.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsByIds(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve a set of playlists based on their ids.
            </summary>
            <param name="playlistIds">The ids of the playlists you would like retrieved.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <returns>The specified playlists, in the order of the ids you passed in. If no playlist exists for an id, 
            null is returned in its place.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsByIds(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve a set of playlists based on their ids.
            </summary>
            <param name="playlistIds">The ids of the playlists you would like retrieved.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <returns>The specified playlists, in the order of the ids you passed in. If no playlist exists for an id, 
            null is returned in its place.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsByIds(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Retrieve a set of playlists based on their ids.
            </summary>
            <param name="playlistIds">The ids of the playlists you would like retrieved.</param>
            <returns>The specified playlists, in the order of the ids you passed in. If no playlist exists for an id, 
            null is returned in its place.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistByReferenceId(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve a playlist based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The reference id of the playlist we'd like to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you include 
            the value 'customFields' in the video_fields parameter.</param>
            <returns>The playlist that has the given reference id, or null if there is no matching playlist.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistByReferenceId(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve a playlist based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The reference id of the playlist we'd like to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <returns>The playlist that has the given reference id, or null if there is no matching playlist.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistByReferenceId(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve a playlist based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The reference id of the playlist we'd like to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <returns>The playlist that has the given reference id, or null if there is no matching playlist.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistByReferenceId(System.String)">
            <summary>
            Retrieve a playlist based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The reference id of the playlist we'd like to retrieve.</param>
            <returns>The playlist that has the given reference id, or null if there is no matching playlist.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsByReferenceIds(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve multiple playlists based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The reference ids of the playlists we'd like to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you include 
            the value 'customFields' in the video_fields parameter.</param>
            <returns>A collection of the specified playlists, in the order of the reference ids you passed in. If no 
            playlist exists for a reference id, null is returned in its place.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsByReferenceIds(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve multiple playlists based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The reference ids of the playlists we'd like to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <returns>A collection of the specified playlists, in the order of the reference ids you passed in. If no 
            playlist exists for a reference id, null is returned in its place.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsByReferenceIds(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve multiple playlists based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The reference ids of the playlists we'd like to retrieve.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <returns>A collection of the specified playlists, in the order of the reference ids you passed in. If no 
            playlist exists for a reference id, null is returned in its place.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsByReferenceIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve multiple playlists based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The reference ids of the playlists we'd like to retrieve.</param>
            <returns>A collection of the specified playlists, in the order of the reference ids you passed in. If no 
            playlist exists for a reference id, null is returned in its place.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsForPlayerId(System.Int64,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Given the id of a player, returns all the playlists assigned to that player.
            </summary>
            <param name="playerId">The player id whose playlists we want to return.</param>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all 
            of the playlists that satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you include 
            the value 'customFields' in the video_fields parameter.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>The collection of playlists requested.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsForPlayerId(System.Int64,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Given the id of a player, returns all the playlists assigned to that player.
            </summary>
            <param name="playerId">The player id whose playlists we want to return.</param>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all 
            of the playlists that satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <param name="customFields">A list of the custom fields you wish to have populated in the videos 
            contained in the returned object. If you omit this parameter, no custom fields are returned, unless you include 
            the value 'customFields' in the video_fields parameter.</param>
            <returns>The collection of playlists requested.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsForPlayerId(System.Int64,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Given the id of a player, returns all the playlists assigned to that player.
            </summary>
            <param name="playerId">The player id whose playlists we want to return.</param>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all 
            of the playlists that satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the Playlists 
            contained in the returned object. If you omit this parameter, all playlist fields are returned.</param>
            <returns>The collection of playlists requested.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsForPlayerId(System.Int64,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Given the id of a player, returns all the playlists assigned to that player.
            </summary>
            <param name="playerId">The player id whose playlists we want to return.</param>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all 
            of the playlists that satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="videoFields">A list of the fields you wish to have populated in the Videos 
            contained in the playlists. If you omit this parameter, the method returns the following fields of the 
            Video: id, name, shortDescription, longDescription, creationDate, publisheddate, lastModifiedDate, linkURL, 
            linkText, tags, videoStillURL, thumbnailURL, referenceId, length, economics, playsTotal, playsTrailingWeek. 
            If you use a token with URL access, this method also returns the Videos' FLVURL, renditions, FLVFullLength, 
            videoFullLength.</param>
            <returns>The collection of playlists requested.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsForPlayerId(System.Int64,System.Int32,System.Int32)">
            <summary>
            Given the id of a player, returns all the playlists assigned to that player.
            </summary>
            <param name="playerId">The player id whose playlists we want to return.</param>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all 
            of the playlists that satisfy the request. The maximum page size is 50.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>The collection of playlists requested.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindPlaylistsForPlayerId(System.Int64)">
            <summary>
            Given the id of a player, returns all the playlists assigned to that player.
            </summary>
            <param name="playerId">The player id whose playlists we want to return.</param>
            <returns>The collection of playlists requested.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.CreateAudioTrackPlaylist(BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist)">
            <summary>
            Creates a playlist.
            </summary>
            <param name="playlist">The playlist you'd like to create.</param>
            <returns>The ID of the newly created playlist.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.UpdateAudioTrackPlaylist(BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist)">
            <summary>
            Updates a playlist.
            </summary>
            <param name="playlist">The playlist you'd like to update.</param>
            <returns>The updated playlist.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.DeleteAudioTrackPlaylist(System.Int64,System.Boolean)">
            <summary>
            Deletes a playlist, specified by playlist ID
            </summary>
            <param name="playlistId">The ID of the playlist you'd like to delete</param>
            <param name="cascade">If true, playlist will be deleted even if it is referenced by players. The playlist will 
            be removed from all players in which it appears, then deleted.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.DeleteAudioTrackPlaylist(System.String,System.Boolean)">
            <summary>
            Deletes a playlist, specified by the playlist's Reference ID
            </summary>
            <param name="referenceId">The Reference ID of the playlist you'd like to delete</param>
            <param name="cascade">If true, playlist will be deleted even if it is referenced by players. The playlist will 
            be removed from all players in which it appears, then deleted.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTrackPlaylists(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Find all audio track playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the 
            playlists that satisfy the request. The maximum page size is 100; if you do not set this argument, 
            or if you set it to an integer > 100, your results will come back as if you had set page_size=100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The property by which you'd like to sort the results.</param>
            <param name="sortOrder">The order in which you'd like the results sorted - ascending or descending.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained 
            in the playlists.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the playlists contained in 
            the returned object.</param>
            <param name="getItemCount">If true, also return how many total results there are.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTrackPlaylists(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find all audio track playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the 
            playlists that satisfy the request. The maximum page size is 100; if you do not set this argument, 
            or if you set it to an integer > 100, your results will come back as if you had set page_size=100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The property by which you'd like to sort the results.</param>
            <param name="sortOrder">The order in which you'd like the results sorted - ascending or descending.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained 
            in the playlists.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the playlists contained in 
            the returned object.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTrackPlaylists(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Find all audio track playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the 
            playlists that satisfy the request. The maximum page size is 100; if you do not set this argument, 
            or if you set it to an integer > 100, your results will come back as if you had set page_size=100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The property by which you'd like to sort the results.</param>
            <param name="sortOrder">The order in which you'd like the results sorted - ascending or descending.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained 
            in the playlists.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTrackPlaylists(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy,BrightcoveMapiWrapper.Model.SortOrder)">
            <summary>
            Find all audio track playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the 
            playlists that satisfy the request. The maximum page size is 100; if you do not set this argument, 
            or if you set it to an integer > 100, your results will come back as if you had set page_size=100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The property by which you'd like to sort the results.</param>
            <param name="sortOrder">The order in which you'd like the results sorted - ascending or descending.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTrackPlaylists(System.Int32,System.Int32,BrightcoveMapiWrapper.Model.SortBy)">
            <summary>
            Find all audio track playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the 
            playlists that satisfy the request. The maximum page size is 100; if you do not set this argument, 
            or if you set it to an integer > 100, your results will come back as if you had set page_size=100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <param name="sortBy">The property by which you'd like to sort the results.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTrackPlaylists(System.Int32,System.Int32)">
            <summary>
            Find all audio track playlists in this account.
            </summary>
            <param name="pageSize">Number of playlists returned per page. A page is a subset of all of the 
            playlists that satisfy the request. The maximum page size is 100; if you do not set this argument, 
            or if you set it to an integer > 100, your results will come back as if you had set page_size=100.</param>
            <param name="pageNumber">The zero-indexed number of the page to return.</param>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAllAudioTrackPlaylists">
            <summary>
            Find all audio track playlists in this account.
            </summary>
            <returns>A collection of Playlists that is the specified subset of all the playlists in this account.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistById(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds a particular audio track playlist based on its id.
            </summary>
            <param name="audioTrackPlaylistId">The id of the playlist requested.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained in the playlists.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the playlists contained in the returned object.</param>
            <returns>The playlist requested, or null, if there is no audio track playlist with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistById(System.Int64,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds a particular audio track playlist based on its id.
            </summary>
            <param name="audioTrackPlaylistId">The id of the playlist requested.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained in the playlists.</param>
            <returns>The playlist requested, or null, if there is no audio track playlist with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistById(System.Int64)">
            <summary>
            Finds a particular audio track playlist based on its id.
            </summary>
            <param name="audioTrackPlaylistId">The id of the playlist requested.</param>
            <returns>The playlist requested, or null, if there is no audio track playlist with that id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistByReferenceId(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve an audio track playlist based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The reference id of the playlist we'd like to retrieve.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks 
            contained in the playlists.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the playlists contained 
            in the returned object. Passing null populates with all fields.</param>
            <returns>The playlist that has the given reference id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistByReferenceId(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve an audio track playlist based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The reference id of the playlist we'd like to retrieve.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks 
            contained in the playlists.</param>
            <returns>The playlist that has the given reference id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistByReferenceId(System.String)">
            <summary>
            Retrieve an audio track playlist based on its publisher-assigned reference id.
            </summary>
            <param name="referenceId">The reference id of the playlist we'd like to retrieve.</param>
            <returns>The playlist that has the given reference id.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistsByIds(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve a set of audio track playlists based on their ids.
            </summary>
            <param name="audioTrackPlaylistIds">The ids of the playlists you would like retrieved.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained in the playlists.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the playlists contained in the returned object.</param>
            <returns>The specified playlists, in the order of the ids you passed in. If no playlist exists for an id, null is returned in its place.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistsByIds(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve a set of audio track playlists based on their ids.
            </summary>
            <param name="audioTrackPlaylistIds">The ids of the playlists you would like retrieved.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained in the playlists.</param>
            <returns>The specified playlists, in the order of the ids you passed in. If no playlist exists for an id, null is returned in its place.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistsByIds(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Retrieve a set of audio track playlists based on their ids.
            </summary>
            <param name="audioTrackPlaylistIds">The ids of the playlists you would like retrieved.</param>
            <returns>The specified playlists, in the order of the ids you passed in. If no playlist exists for an id, null is returned in its place.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistsByReferenceIds(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve multiple audio track playlists based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The reference ids of the playlists we'd like to retrieve.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained in the playlists.</param>
            <param name="playlistFields">A list of the fields you wish to have populated in the playlists contained in the returned object. </param>
            <returns>The specified playlists, in the order of the reference ids you passed in.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistsByReferenceIds(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve multiple audio track playlists based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The reference ids of the playlists we'd like to retrieve.</param>
            <param name="audioTrackFields">A list of the fields you wish to have populated in the audio tracks contained in the playlists.</param>
            <returns>The specified playlists, in the order of the reference ids you passed in.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApi.FindAudioTrackPlaylistsByReferenceIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve multiple audio track playlists based on their publisher-assigned reference ids.
            </summary>
            <param name="referenceIds">The reference ids of the playlists we'd like to retrieve.</param>
            <returns>The specified playlists, in the order of the reference ids you passed in.</returns>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApi.Configuration">
            <summary>
            The pointer to the Configuration of the <see cref="P:BrightcoveMapiWrapper.Api.BrightcoveApi.Connector"/>. /&gt;
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApi.Connector">
            <summary>
            The Connector used for Brightcove connections.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Serialization.BrightcoveItemConverter`1">
            <summary>
            Converts Brightcove model items to JavaScript objects and back.
            </summary>
            <typeparam name="T">The type of model item to convert.</typeparam>
        </member>
        <member name="M:BrightcoveMapiWrapper.Serialization.BrightcoveItemConverter`1.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            When overridden in a derived class, converts the provided dictionary into an object of the specified type.
            </summary>
            <param name="dictionary">An <see cref="T:System.Collections.Generic.IDictionary`2"/> instance of property data stored as name/value pairs.</param>
            <param name="type">The type of the resulting object.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/> instance.</param>
            <returns>
            The deserialized object.
            </returns>
            <exception cref="T:System.ArgumentNullException">dictionary</exception>
        </member>
        <member name="M:BrightcoveMapiWrapper.Serialization.BrightcoveItemConverter`1.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            When overridden in a derived class, builds a dictionary of name/value pairs.
            </summary>
            <param name="obj">The object to serialize.</param>
            <param name="serializer">The object that is responsible for the serialization.</param>
            <returns>
            An object that contains key/value pairs that represent the object’s data.
            </returns>
        </member>
        <member name="P:BrightcoveMapiWrapper.Serialization.BrightcoveItemConverter`1.SupportedTypes">
            <summary>
            When overridden in a derived class, gets a collection of the supported types.
            </summary>
            <returns>
            An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1"/> that represents the types supported by the converter.
              </returns>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Containers.BrightcoveError">
            <summary>
            An error returned from the Brightcove API. See <a href="http://support.brightcove.com/en/video-cloud/docs/media-api-error-message-reference">Media API Error Message Reference</a> for a documented list of errors.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Containers.IBrightcoveError">
            <summary>
            Defines a generic Brightcove error.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.IBrightcoveError.Code">
            <summary>
            A numeric code.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.IBrightcoveError.Message">
            <summary>
            An error message.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Serialization.IJavaScriptConvertable">
            <summary>
            Defines the way Brightcove objects are converted to and from JSON.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Serialization.IJavaScriptConvertable.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Serialization.IJavaScriptConvertable.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
<<<<<<< HEAD
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.BrightcoveError.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.BrightcoveError.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
=======
            <param name="dictionary">The dictionary.</param>
            <param name="serializer">The serializer.</param>
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.BrightcoveError.Name">
            <summary>
            The name of the error.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.BrightcoveError.Message">
            <summary>
            The error code message.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.BrightcoveError.Code">
            <summary>
            The error code number.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector">
            <summary>
            A concrete implementation of <see cref="T:BrightcoveMapiWrapper.Api.Connectors.IBrightcoveApiConnector"/>.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Api.Connectors.IBrightcoveApiConnector">
            <summary>
            Defines the way to connect to Brightcove's API. 
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.IBrightcoveApiConnector.GetResponseJson(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Defines a method used to retrieve the json string returned from an HTTP GET request to Brightcove's REST API.
            </summary>
            <param name="requestParams">A name value collection of parameters.</param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.IBrightcoveApiConnector.GetPostResponseJson(System.String)">
            <summary>
            Defines a method used to retrieve the json string returned from an HTTP POST request to Brightcove's REST API.
            </summary>
            <param name="postJson"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.IBrightcoveApiConnector.GetFilePostResponseJson(System.String,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo)">
            <summary>
            Defines a method used to retrieve the json string returned from an HTTP GET request to Brightcove's REST API. Includes file data.
            </summary>
            <param name="postJson"></param>
            <param name="fileUploadInfo"></param>
            <returns></returns>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.Connectors.IBrightcoveApiConnector.RequestBuilder">
            <summary>
            Defines a <see cref="T:BrightcoveMapiWrapper.Api.Connectors.IRequestBuilder"/>.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.Connectors.IBrightcoveApiConnector.Configuration">
            <summary>
            Defines a <see cref="T:BrightcoveMapiWrapper.Api.BrightcoveApiConfig"/>
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.#ctor(BrightcoveMapiWrapper.Api.BrightcoveApiConfig)">
            <summary>
            Constructor.
            </summary>
            <param name="configuration">An instance of <see cref="T:BrightcoveMapiWrapper.Api.BrightcoveApiConfig"/> to set as an instance property.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.#ctor(BrightcoveMapiWrapper.Api.BrightcoveApiConfig,BrightcoveMapiWrapper.Api.Connectors.IRequestBuilder)">
            <summary>
            Constructor.
            </summary>
            <param name="configuration">An instance of <see cref="T:BrightcoveMapiWrapper.Api.BrightcoveApiConfig"/> to set as an instance property.</param>
            <param name="requestBuilder"></param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.GetResponseJson(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Performs an API Read (HTTP GET) request based on the specified params.
            </summary>
            <param name="requestParams"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.GetPostResponseJson(System.String)">
            <summary>
            Performs an API Write (HTTP POST) request 
            </summary>
            <param name="postJson"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.GetFilePostResponseJson(System.String,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo)">
            <summary>
            Performs an API Write (HTTP POST) request that includes file data
            </summary>
            <param name="postJson"></param>
            <param name="fileUploadInfo"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.GetPostResponseJson(System.String,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo)">
            <summary>
            Performs an API Write (HTTP POST) request, with an optional callback to add extra request params
            </summary>
            <param name="postJson"></param>
            <param name="fileUploadInfo"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.PerformRequest(System.Net.HttpWebRequest)">
            <summary>
            Performs the specified HttpWebRequest
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.ReadResponse(System.IO.Stream)">
            <summary>
            Reads the entirety of the specified stream
            </summary>
            <param name="responseStream"></param>
            <returns></returns>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.RequestBuilder">
            <summary>
            Used to build a request URL.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.Configuration">
            <summary>
            An instance of <see cref="T:BrightcoveMapiWrapper.Api.BrightcoveApiConfig"/>.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.RequestUrl">
            <summary>
            The URL generated by the <see cref="M:BrightcoveMapiWrapper.Api.Connectors.BrightcoveApiConnector.GetResponseJson(System.Collections.Specialized.NameValueCollection)"/> method. 
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Containers.SortedFieldDictionary">
            <summary>
            Prepares an ordered dictionary of fields for sorting by the SearchVideos method.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.SortedFieldDictionary.#ctor(System.Collections.Specialized.IOrderedDictionary)">
            <summary>
            Constructor.
            </summary>
<<<<<<< HEAD
            <param name="orderedDictionary">A properly constructed <see cref="T:System.Collections.Specialized.IOrderedDictionary"/>.</param>
            <example>
            The example below demonstrates how to pass in objects to this constructor.
=======
            <param name="orderedDictionary">A properly constructed <see cref="T:System.Collections.Specialized.IOrderedDictionary"></see></param>
            <example>
            The below snippet demonstrates how to pass in objects to this constructor.
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
            <code>
            var dict = new <see cref="P:BrightcoveMapiWrapper.Model.Containers.SortedFieldDictionary.OrderedDictionary"/>
            {
            	{ SortBy.CreationDate, SortOrder.Ascending },
            	{ SortBy.CreationDate, SortOrder.Descending }
            };
            SortedFieldDictionary sortFields = new SortedFieldDictionary(dict);
            </code>
            </example>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.SortedFieldDictionary.#ctor(System.Object[])">
            <summary>
            Constructor.
            </summary>
            <param name="fields">The <see cref="T:System.Object"/> array passed to the constructor.</param>
            <example>
<<<<<<< HEAD
            The example below demonstrates how to pass in objects to this constructor.
=======
            The below snippet demonstrates how to pass in objects to this constructor.
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
            <code>
            SortedFieldDictionary sortFields = new SortedFieldDictionary(SortBy.DisplayName, SortOrder.Ascending, SortBy.CreationDate, SortOrder.Descending);
            </code>
            </example>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.SortedFieldDictionary.ParseParams(System.Object[]@)">
            <summary>
            Parses the parameters passed to the constructor.
            </summary>
<<<<<<< HEAD
            <param name="fields">The <see cref="T:Object[]"/> passed to the constructor.</param>
=======
            <param name="fields">The object[] passed to the constructor.</param>
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
            <exception cref="T:System.ArgumentException">Either the length of the params argument is odd, each pair of objects within the params argument do not each comprise a valid <see cref="T:System.Collections.Generic.KeyValuePair`2"/>, or there is a duplicate <see cref="T:BrightcoveMapiWrapper.Model.SortBy"/> key within the params argument.</exception>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.SortedFieldDictionary.OrderedDictionary">
            <summary>
<<<<<<< HEAD
            A dictionary that preserves both uniqueness of <see cref="T:BrightcoveMapiWrapper.Model.SortBy"/> (you can only sort by one field in a single request) and insertion order (the order by which you sort directly affects which items are returned by a single API call).
=======
            A dictionary that preserves both uniqueness of SortBy (you can only sort by one field in a single request) and insertion order (the order by which you sort directly affects which items are returned by a single API call).
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist">
            <summary>
            The BrightcoveAudioTrackPlaylist object is a collection of BrightcoveAudioTracks.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Items.BrightcoveItem">
            <summary>
            Class from which Brightcove item model classes descend, 
            like BrightcoveVideo, BrightcoveAudioTrack, and BrightcovePlaylist 
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
<<<<<<< HEAD
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
=======
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.AccountId">
            <summary>
            The ID of the account to which this Playlist belongs, assigned by Brightcove.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.AudioTrackIds">
            <summary>
            A list of IDs of the audio tracks contained in this playlist
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.AudioTracks">
            <summary>
            A list of BrightcoveAudioTracks contained in this playlist
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.FilterTags">
            <summary>
            A list of the tags that apply to this smart playlist.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.Id">
            <summary>
            A number that uniquely identifies the Playlist. This id is automatically assigned when 
            the Playlist is created.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.Name">
            <summary>
            The title of this Playlist, limited to 100 characters. The name is a required property when you
            create a playlist.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.PlaylistType">
            <summary>
            For a manual playlist, set this to EXPLICIT. For a smart playlist, indicate how to order the playlist by setting this to one of the following choices: 
            OLDEST_TO_NEWEST (by activated date)
            NEWEST_TO_OLDEST (by activated date)
            START_DATE_OLDEST_TO_NEWEST
            START_DATE_NEWEST_TO_OLDEST 
            ALPHABETICAL (by video name)
            PLAYSTOTAL
            PLAYS_TRAILING_WEEK
            
            The playlistType is a required property when you create a playlist.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.ReferenceId">
            <summary>
            A user-specified id, limited to 150 characters, that uniquely identifies this Playlist. 
            Note that the find_audiotrack_playlists_by_ids method cannot handle referenceIds that 
            contain commas, so you may want to avoid using commas in referenceId values.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.ShortDescription">
            <summary>
            A short description describing the Playlist, limited to 250 characters.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrackPlaylist.ThumbnailUrl">
            <summary>
            The URL of the thumbnail associated with this Playlist.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Containers.FieldValuePair">
            <summary>
            Used to store field/value pairs of pertinent Brightcove parameter information.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.FieldValuePair.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.FieldValuePair.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="field">The name of the field.</param>
            <param name="value">The string representation of the value.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.FieldValuePair.ToBrightcoveString">
            <summary>
            Turns a field/value pair into a string formatted for Brightcove's API.
            </summary>
            <returns>A correctly formatted string for Brightcove's API.</returns>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.FieldValuePair.Field">
            <summary>
            The name of the field.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.FieldValuePair.Value">
            <summary>
            The string representation of the value.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Containers.BrightcoveParamCollection">
            <summary>
            A dictionary of Brightcove parameters.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.BrightcoveParamCollection.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.BrightcoveParamCollection.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
        <member name="T:BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo">
            <summary>
            Helper class used to store file upload information.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo"/> class.
            </summary>
            <param name="data">The data to upload.</param>
            <param name="fileName">Name of the file.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo"/> class.
            </summary>
            <param name="data">The data to upload.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo.FileData">
            <summary>
            The data of the file stored in a stream.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo.FileName">
            <summary>
            The name of the file.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo.ContentType">
            <summary>
            The content type of the file.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack">
            <summary>
            The BrightcoveAudioTrack object represents a single audio track.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
<<<<<<< HEAD
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
=======
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.AccountId">
            <summary>
            A number, assigned by Brightcove, that uniquely identifies the account to which the Audio belongs.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.AlbumTitle">
            <summary>
            Album title
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.ArtistName">
            <summary>
            Artist Name
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.CreationDate">
            <summary>
            The date this audio track was created.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.EndDate">
            <summary>
            End date
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.Id">
            <summary>
            A number that uniquely identifies this audio track, assigned by Brightcove when the track is created.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.LargeImageUrl">
            <summary>
            Large image URL
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.LastModifiedDate">
            <summary>
            Last modified dat
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.Length">
            <summary>
            Length
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.LinkText">
            <summary>
            Link text
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.LinkUrl">
            <summary>
            Link URL
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.LongDescription">
            <summary>
            A longer description of this audio track, limited to 5000 characters.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.Name">
            <summary>
            The name of the audio track
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.PublishedDate">
            <summary>
            Published dat
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.ReferenceId">
            <summary>
            A user-specified id that uniquely identifies the audio track, limited to 150 characters. 
            A referenceId can be used as a foreign-key to identify this audio track in another system. 
            Note that that the find_audiotracks_by_reference_ids method cannot handle a referenceId 
            that contain commas, so you may want to avoid using commas in referenceId values.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.ReleaseDate">
            <summary>
            Release date
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.ShortDescription">
            <summary>
            A short description describing the audio track, limited to 250 characters. The 
            shortDescription is a required property when you create a audio track.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.StartDate">
            <summary>
            Start date
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.ThumbnailUrl">
            <summary>
            Thumbnail URL
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveAudioTrack.TrackAssetUrl">
            <summary>
            Track asset URL
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Api.BrightcoveApiFactory">
            <summary>
            Creates instances of <see cref="T:BrightcoveMapiWrapper.Api.BrightcoveApi"/>.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiFactory.CreateApi(System.String)">
            <summary>
            Creates an API object for read-only API access.
            </summary>
            <param name="readToken">The authentication token provided to authorize read access to the Media APIs.</param>
            <returns>A configured BrightcoveApi object</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiFactory.CreateApi(System.String,System.String)">
            <summary>
            Creates an API object for read/write API access.
            </summary>
            <param name="readToken">The authentication token provided to authorize read access to the Media APIs.</param>
            <param name="writeToken">The authentication token provided to authorize write access to the Media APIs.</param>
            <returns>A configured BrightcoveApi object</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiFactory.CreateApi(System.String,System.String,System.String)">
            <summary>
            Creates an API object for read/write API access with a custom "media delivery" format.
            </summary>
            <param name="readToken">The authentication token provided to authorize read access to the Media APIs.</param>
            <param name="writeToken">The authentication token provided to authorize write access to the Media APIs.</param>
            <param name="mediaDelivery">The format for media delivery. Specify "http" to retrieve URLs for downloading 
            audio &amp; video files, rather than streaming them.</param>
            <returns>A configured BrightcoveApi object</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiFactory.CreateApi(System.String,BrightcoveMapiWrapper.Model.BrightcoveRegion)">
            <summary>
            Creates an API object for read-only API access for a specific region.
            </summary>
            <param name="readToken">The authentication token provided to authorize read access to the Media APIs.</param>
            <param name="region">The region of the video publishing.</param>
            <returns>A configured BrightcoveApi object</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiFactory.CreateApi(System.String,System.String,BrightcoveMapiWrapper.Model.BrightcoveRegion)">
            <summary>
            Creates an API object for read/write API access for a specific region.
            </summary>
            <param name="readToken">The authentication token provided to authorize read access to the Media APIs.</param>
            <param name="writeToken">The authentication token provided to authorize write access to the Media APIs.</param>
            <param name="region">The region of the video publishing.</param>
            <returns>A configured BrightcoveApi object</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiFactory.CreateApi(System.String,System.String,System.String,BrightcoveMapiWrapper.Model.BrightcoveRegion)">
            <summary>
            Creates an API object for read/write API access for a specific region and with a custom "media delivery" format.
            </summary>
            <param name="readToken">The authentication token provided to authorize read access to the Media APIs.</param>
            <param name="writeToken">The authentication token provided to authorize write access to the Media APIs.</param>
            <param name="mediaDelivery">The format for media delivery. Specify "http" to retrieve URLs for downloading 
            audio &amp; video files, rather than streaming them.</param>
            <param name="region">The region of the video publishing.</param>
            <returns>A configured BrightcoveApi object</returns>
        </member>
        <member name="T:BrightcoveMapiWrapper.Util.DateUtil">
            <summary>
            Primarily functions to convert .NET time to Unix time.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.DateUtil.FromUnixMillisecondsUtc(System.Int64)">
            <summary>
            Adds a specified number of milliseconds to the start of the Unix epoch.
            </summary>
            <param name="milliseconds">The specified number of milliseconds to add.</param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.DateUtil.ToUnixMillisecondsUtc(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime"/> object in UTC to Unix milliseconds.
            </summary>
            <param name="utcDateTime">The <see cref="T:System.DateTime"/> object in UTC.</param>
            <returns>The number of milliseconds.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.DateUtil.ToUnixMinutesUtc(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime"/> object in UTC to Unix minutes.
            </summary>
            <param name="utcDateTime">The <see cref="T:System.DateTime"/> object in UTC.</param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.DateUtil.ConvertAndSetDate(System.Object,System.Action{System.DateTime})">
            <summary>
            Converts the number of milliseconds represented as a string and adds it to the<see cref="T:System.DateTime"/> specified in the <paramref name="setterCallback"/> action.
            </summary>
            <param name="dateString">The number of milliseconds as a <see cref="T:System.String"/>.</param>
            <param name="setterCallback">The action to perform.</param>
            <exception cref="T:System.InvalidCastException"><paramref name="dateString"/> is not a string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="dateString"/> is null.</exception>
            <exception cref="T:System.FormatException"><paramref name="dateString"/> is in the wrong format.</exception>
            <exception cref="T:System.OverflowException"><paramref name="dateString"/> represents a number less than MinValue or greater than MaxValue.</exception>
        </member>
        <member name="P:BrightcoveMapiWrapper.Util.DateUtil.UnixEpochStart">
            <summary>
            Gets the Unix epoch start.
            </summary>
            <value>
            The Unix epoch start.
            </value>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay">
            <summary>
            The BrightcoveLogoOverlay object represents a logo overlay assigned to a video. The logo overlay is displayed 
            over a portion of the video display for the entire duration of the video.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
<<<<<<< HEAD
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
=======
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay.Id">
            <summary>
            A number that uniquely identifies the LogoOverlay. This id is automatically assigned 
            by Brightcove when the LogoOverlay is created.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay.Image">
            <summary>
            A BrightcoveImage object, defined by its id or referenceId, with type=LOGO_OVERLAY.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay.Tooltip">
            <summary>
            Optional. A text that is displayed when the viewer mouses over the logo overlay.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay.LinkUrl">
            <summary>
            Optional. A URL to go to if the viewer clicks on the logo overlay.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveLogoOverlay.Alignment">
            <summary>
            Optional. A LogoOverlayAlignmentEnum representing the orientation of the logo overlay 
            relative to the video display. One of the following values: TOP_LEFT, BOTTOM_LEFT, 
            TOP_RIGHT, or BOTTOM_RIGHT. The default is BOTTOM_RIGHT.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.SortOrder">
            <summary>
            The possible sort orders for API read requests
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortOrder.None">
            <summary>
            No option specified. Will throw an exception when converting to a string parameter.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortOrder.Ascending">
            <summary>
            Sort the items in ascending order.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortOrder.Descending">
            <summary>
            Sort the items in descending order.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.SortBy">
            <summary>
            The possible ways to sort results from an API read request
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortBy.None">
            <summary>
            No option specified. Will throw an exception when converting to a string parameter.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortBy.CreationDate">
            <summary>
            Date title was created.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortBy.ModifiedDate">
            <summary>
            Date title was last modified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortBy.PublishDate">
            <summary>
            Date title was published.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortBy.StartDate">
            <summary>
            Date title is scheduled to be available. Video only.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortBy.PlaysTotal">
            <summary>
            Number of times this title has been viewed.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortBy.PlaysTrailingWeek">
            <summary>
            Number of times this title has been viewed in the past 7 days (excluding today).
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortBy.DisplayName">
            <summary>
            Name of the title. Video only.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.SortBy.ReferenceId">
            <summary>
            Reference ID of the title.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.BrightcoveUploadStatus">
            <summary>
            The possible upload statuses returned from Brightcove.
            
            Complete: Video upload and processing have completed.
            Processing: Video is being processed after upload for transcoding.
            Uploading: Video is still in the process of being uploaded.
            Error: Indicates an error during upload or processing.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveUploadStatus.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveUploadStatus.Complete">
            <summary>
            Video upload and processing have completed.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveUploadStatus.Error">
            <summary>
            Indicates an error during upload or processing.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveUploadStatus.Processing">
            <summary>
            Video is being processed after upload for transcoding.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveUploadStatus.Uploading">
            <summary>
            Video is still in the process of being uploaded.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.ModifiedVideoFilter">
            <summary>
            The filters available for the FindModifiedVideos call
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ModifiedVideoFilter.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ModifiedVideoFilter.Playable">
            <summary>
            The video is playable.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ModifiedVideoFilter.Unscheduled">
            <summary>
            The video is unscheduled.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ModifiedVideoFilter.Inactive">
            <summary>
            The video is inactive.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ModifiedVideoFilter.Deleted">
            <summary>
            The video is deleted.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.PlaylistType">
            <summary>
            Playlist types.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.PlaylistType.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.PlaylistType.Explicit">
            <summary>
            A manual playlist, the videos of which were added individually.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.PlaylistType.OldestToNewest">
            <summary>
            A smart playlist, ordered from oldest to newest, by published date.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.PlaylistType.NewestToOldest">
            <summary>
            A smart playlist, ordered from newest to oldest, by published date.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.PlaylistType.Alphabetical">
            <summary>
            A smart playlist, ordered alphabetically.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.PlaylistType.PlaysTotal">
            <summary>
            A smart playlist, ordered by total plays.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.PlaylistType.PlaysTrailingWeek">
            <summary>
            A smart playlist, ordered by most plays in the past week.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.PlaylistType.StartDateOldestToNewest">
            <summary>
            A smart playlist, ordered from oldest to newest, by start date.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.PlaylistType.StartDateNewestToOldest">
            <summary>
            A smart playlist, ordered from newest to oldest, by start date.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.VideoCodec">
            <summary>
            Video codecs
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.VideoCodec.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.VideoCodec.Sorenson">
            <summary>
            Uses the Sorenson codec.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.VideoCodec.On2">
            <summary>
            Uses the On2 codec.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.VideoCodec.H264">
            <summary>
            Uses the H264 codec.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.ControllerType">
            <summary>
            The types required for live streaming renditions
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ControllerType.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ControllerType.LimelightLive">
            <summary>
            Uses the Limelight Live controller.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ControllerType.AkamaiLive">
            <summary>
            Uses the Akamai Live controller.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ControllerType.Default">
            <summary>
            Uses the default controller.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.TagInclusionRule">
            <summary>
            Tag inclusion rules for smart playlists. Not available in Read API methods.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.TagInclusionRule.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.TagInclusionRule.And">
            <summary>
            Contains all.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.TagInclusionRule.Or">
            <summary>
            Contains one or more.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.ItemState">
            <summary>
            The possible states for a media item
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ItemState.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ItemState.Active">
            <summary>
            Whether the item is active.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ItemState.Inactive">
            <summary>
            Whether the item is inactive.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ItemState.Deleted">
            <summary>
            Whether the item is deleted.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Economics">
            <summary>
            The possible "economics" of media items; that is,
            whether they are free or supported by ads.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.Economics.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.Economics.Free">
            <summary>
            Free item.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.Economics.AdSupported">
            <summary>
            Item is supported by ads.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.EncodeTo">
            <summary>
            The possible encodings for newly created videos
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.EncodeTo.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.EncodeTo.Flv">
            <summary>
            Encode to the .flv file format.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.EncodeTo.Mp4">
            <summary>
            Encode to the .mp4 file format.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.CuePointType">
            <summary>
            Types of cue points.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.CuePointType.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.CuePointType.Ad">
            <summary>
            Used to trigger mid-roll ad requests.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.CuePointType.Code">
            <summary>
            Can be used to indicate a chapter or scene break in the video.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.ImageType">
            <summary>
            The possible image types
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ImageType.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ImageType.Thumbnail">
            <summary>
            Associated as a thumbnail.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ImageType.VideoStill">
            <summary>
            Associated as a video still.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.ImageType.LogoOverlay">
            <summary>
            Associated as a logo overlay.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.LogoOverlayAlignment">
            <summary>
            Alignments for the logo overlay
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.LogoOverlayAlignment.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.LogoOverlayAlignment.TopLeft">
            <summary>
            Align to the top left of the video display.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.LogoOverlayAlignment.BottomLeft">
            <summary>
            Align to the bottom left of the video display.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.LogoOverlayAlignment.TopRight">
            <summary>
            Align to the top right of the video display.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.LogoOverlayAlignment.BottomRight">
            <summary>
            Align to the bottom right of the video display.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.BrightcoveRegion">
            <summary>
            Specify the region for setting the general service URL.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveRegion.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveRegion.Generic">
            <summary>
            Any unspecified region. Mapped to the .com generic top-level domain.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveRegion.Japan">
            <summary>
            Japan. Mapped to the .co.jp country code top-level domain.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.BrightcoveReadMethod">
            <summary>
            The read methods supported by Brightcove. Available method descriptions are taken from <a href="http://docs.brightcove.com/en/media/">Brightcove Video Cloud Media API Reference</a>.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAllAudiotrackPlaylists">
            <summary>
            Find all audio track playlists in this account.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAudiotrackPlaylistById">
            <summary>
            Finds a particular audio track playlist based on its id.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAudiotrackPlaylistByReferenceId">
            <summary>
            Retrieve an audio track playlist based on its publisher-assigned reference id.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAudiotrackPlaylistsByIds">
            <summary>
            Retrieve a set of audio track playlists based on their ids.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAudiotrackPlaylistsByReferenceIds">
            <summary>
            Retrieve multiple audio track playlists based on their publisher-assigned reference ids.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAllAudiotracks">
            <summary>
            Find all audio tracks in the Brightcove media library for this account.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAudiotrackById">
            <summary>
            Finds a single audio track with the specified id.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAudiotrackByReferenceId">
            <summary>
            Find an audio track based on its publisher-assigned reference id.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAudiotracksByIds">
            <summary>
            Find multiple audio tracks, given their ids.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAudiotracksByReferenceIds">
            <summary>
            Find multiple audio tracks based on their publisher-assigned reference ids.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAudiotracksByTags">
            <summary>
            Performs a search on all the tags of the audio tracks in this account, and returns a collection of audio tracks that contain the specified tags. Note that tags are case-sensitive.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAudiotracksByText">
            <summary>
            Searches through all the audio tracks in this account, and returns a collection of audio tracks whose name, short description, or long description contain a match for the specified text.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindModifiedAudiotracks">
            <summary>
            Gets all the audio tracks that have been modified since the given time.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAllPlaylists">
            <summary>
            Find all playlists in this account.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindPlaylistById">
            <summary>
            Finds a particular playlist based on its ID.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindPlaylistsByIds">
            <summary>
            Retrieve a set of playlists based on their IDs.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindPlaylistByReferenceId">
            <summary>
            Retrieve a playlist based on its publisher-assigned reference ID.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindPlaylistsByReferenceIds">
            <summary>
            Retrieve multiple playlists based on their publisher-assigned reference IDs.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindPlaylistsForPlayerId">
            <summary>
            Given the ID of a player, returns all the playlists assigned to that player.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideoById">
            <summary>
            Finds a single video with the specified ID.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideosByIds">
            <summary>
            Find multiple videos, given their IDs.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideoByReferenceId">
            <summary>
            Find a video based on its publisher-assigned reference ID.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideosByReferenceIds">
            <summary>
            Find multiple videos based on their publisher-assigned reference IDs.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindAllVideos">
            <summary>
            Find all videos in the Video Cloud media library for this account. This method has the limitation of returning only videos available for play, and does not include videos marked as inactive, currently in the upload process, or outside the scheduled play time.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.SearchVideos">
            <summary>
            Searches videos according to the criteria provided by the user. The criteria are constructed using field/value pairs specified in the command. Consider using the search_videos method for video searches rather than using the other find_video read methods. The search_videos method offers more flexible search and sorting options than the find_video methods, and is especially more flexible than the find_videos_by_text and find_videos_by_tags methods.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindRelatedVideos">
            <summary>
            Finds videos related to the given video. Combines the name and short description of the given video and searches for any partial matches in the name, short description, long description, tags, and custom fields of all videos in the Video Cloud media library for this account. More precise ways of finding related videos include tagging your videos by subject and using the find_videos_by_tags method to find videos that share the same tags: or creating a playlist that includes videos that you know are related. Consider using the search_videos method, which offers more flexible search and sorting options.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideosByUserId">
            <summary>
            Retrieves the videos uploaded by the specified user id. This method can be used to find videos submitted using the old consumer-generated media (CGM) module in Brightcove 2.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideosByCampaignId">
            <summary>
            Gets all the videos associated with the given campaign ID. Campaigns are a feature of the old consumer-generated media (CGM) module in Brightcove 2.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindModifiedVideos">
            <summary>
            Gets all the videos that have been modified since the given time.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideosByText">
            <summary>
            Searches through all the videos in this account, and returns a collection of videos whose name, short description, or long description contain a match for the specified text. Unlike some other Read methods, this method does not provide parameters for sorting the result set. The result set is sorted by relevance. The find_videos_by_text method returns substring matches - words from your search string plus a wildcard (*) at the end; thus, if your search string is "war", the result set will include results such as "warrior", "warfare", and "warbler." Substrings that don't match the beginning of a word are not returned; thus, if your search string is "war", the result set would not include results such as "swarthy" or "inward".
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideosByTags">
            <summary>
            Performs a search on all the tags of the videos in this account, and returns a collection of videos that contain the specified tags. Note that tags are not case-sensitive. This method does not provide parameters for sorting the result set. 
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideoByIdUnfiltered">
            <summary>
            Finds a single video with the specified ID. Unlike find_video_by_id, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideosByIdsUnfiltered">
            <summary>
            Find multiple videos, given their IDs. Unlike find_videos_by_ids, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideoByReferenceIdUnfiltered">
            <summary>
            Find a video based on its publisher-assigned reference ID. Unlike find_video_by_reference_id, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveReadMethod.FindVideosByReferenceIdsUnfiltered">
            <summary>
            Find multiple videos based on their publisher-assigned reference IDs. Unlike find_videos_by_reference_ids, this unfiltered version also returns videos that are unscheduled, inactive, or deleted.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod">
            <summary>
            The write methods supported by Brightcove. Available method descriptions are taken from <a href="http://docs.brightcove.com/en/media/">Brightcove Video Cloud Media API Reference</a>.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.CreateAudiotrackPlaylist">
            <summary>
            Creates a playlist.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.UpdateAudiotrackPlaylist">
            <summary>
            Updates a playlist.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.DeleteAudiotrackPlaylist">
            <summary>
            Deletes a playlist, specified by playlist ID or reference ID.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.CreateAudiotrack">
            <summary>
            Creates a new audio track in Brightcove by uploading a file.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.AddAudioImage">
            <summary>
            Add a thumbnail asset to the specified audio track.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.UpdateAudiotrack">
            <summary>
            Updates the audio track information for a Brightcove audio track.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.DeleteAudiotrack">
            <summary>
            Deletes an audio track.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.GetAudiotrackUploadStatus">
            <summary>
            Gets the audiotrack upload status. 
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.CreatePlaylist">
            <summary>
            Creates a playlist. This method must be called using an HTTP POST request and JSON parameters. If the playlistType property in the Playlist object you submit is explicit, that means it's a manual playlist. If the playlistType property is not explicit, that means it's a smart playlist.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.UpdatePlaylist">
            <summary>
            Updates a playlist, specified by playlist ID or reference ID. Either a playlist ID or a reference ID must be supplied. If you are updating the value of the reference ID, then both the playlist ID and reference ID must be supplied. This method must be called using an HTTP POST request and JSON parameters.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.DeletePlaylist">
            <summary>
            Deletes a playlist, specified by playlist ID or reference ID.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.CreateVideo">
            <summary>
            Use this method to create a single video in your Video Cloud Media Library. You can either upload a new video file, or use the remote assets approach, in which you pass a reference to a video file on your own CDN.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.UpdateVideo">
            <summary>
            Use this method to modify the metadata for a single video in your Video Cloud Media Library.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.DeleteVideo">
            <summary>
            Deletes a video.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.GetUploadStatus">
            <summary>
            Call this function in an HTTP POST request to determine the status of an upload. Note that there is a brief delay from the moment you submit a create_video method call and the moment the transaction for that method call is complete. During that interval, a get_upload_status method call will return an error message saying, "Illegal value - Cannot find any video", because the video has not yet been assigned an ID and begun uploading.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.ShareVideo">
            <summary>
            Shares the specified video with a list of sharee accounts.
            </summary>
        </member>
<<<<<<< HEAD
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.UnshareVideo">
=======
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint.Name">
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
            <summary>
            Deletes the specified previously shared video from a list of sharee accounts. If a shared version of the specified video does not exist in a sharee account, no action is taken.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.AddImage">
            <summary>
            Add a new thumbnail or video still image to a video, or assign an existing image to another video.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.AddLogoOverlay">
            <summary>
            Add a logo overlay image to a video.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.RemoveLogoOverlay">
            <summary>
            Removes a logo overlay previously assigned to a video.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.AddCaptioning">
            <summary>
            Assigns Captioning to a video via uploading a caption file or providing URL of caption file. Deletes any Captioning previously assigned to a video.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Model.BrightcoveWriteMethod.DeleteCaptioning">
            <summary>
            Assigns Captioning to a video via uploading a caption file or providing URL of caption file. Deletes any Captioning previously assigned to a video.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo">
            <summary>
            The BrightcoveVideo object is an aggregate of metadata and asset information associated with a video.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.#ctor">
            <summary>
            Creates an object representing a single video within Brightcove's system.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.AccountId">
            <summary>
            A number, assigned by Brightcove, that uniquely identifies the account to which the Video belongs.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.CreationDate">
            <summary>
            The date this Video was created.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.CuePoints">
            <summary>
            A list of the CuePoints objects assigned to this Video.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.CustomFields">
            <summary>
            A collection of custom field values
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.Economics">
            <summary>
            Either FREE or AD_SUPPORTED. AD_SUPPORTED means that ad requests are enabled for the Video.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.EndDate">
            <summary>
            The last date this Video is available to be played.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.FlvUrl">
            <summary>
            The URL of the video file for this Video. Note that this property can be accessed
            with the Media API only with a special read or write token. This property applies, 
            no matter whether the video's encoding is FLV (VP6) or MP4 (H.264). 
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.Id">
            <summary>
            A number that uniquely identifies this Video, assigned by Brightcove when the Video is created.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.ItemState">
            <summary>
            One of the properties: ACTIVE, INACTIVE, or DELETED. You can set this property only to ACTIVE 
            or INACTIVE; you cannot delete a video by setting its itemState to DELETED.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.LastModifiedDate">
            <summary>
            The date this Video was last modified.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.Length">
            <summary>
            The length of this video in milliseconds.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.LinkText">
            <summary>
            The text displayed for the linkURL, limited to 255 characters.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.LinkUrl">
            <summary>
            An optional URL to a related item, limited to 255 characters.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.LongDescription">
            <summary>
            A longer description of this Video, limited to 5000 characters.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.Name">
            <summary>
            The name of the video
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.PlaysTotal">
            <summary>
            How many times the Video has been played since its creation.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.PlaysTrailingWeek">
            <summary>
            How many times the Video has been played within the past seven days, excluding today.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.PublishedDate">
            <summary>
            The date this Video was last made active.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.ReferenceId">
            <summary>
            A user-specified id that uniquely identifies the Video, limited to 150 characters. 
            A referenceId can be used as a foreign-key to identify this video in another system. 
            Note that that the find_videos_by_reference_ids method cannot handle a referenceId 
            that contain commas, so you may want to avoid using commas in referenceId values.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.Renditions">
            <summary>
            An collection of Renditions that represent the multi-bitrate streaming renditions available for this 
            Video. A Video should have not more than 10 Renditions. 
            Note that when creating or updating a video, only one of either VideoFullLength and Renditions may 
            be set. If both are set, only Renditions will be submitted to the API and VideoFullLength will
            be ignored.
            Note that this property can be accessed with the Media API only with a special read or write token.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.ShortDescription">
            <summary>
            A short description describing the Video, limited to 250 characters. The 
            shortDescription is a required property when you create a video.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.StartDate">
            <summary>
            The first date this Video is available to be played.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.Tags">
            <summary>
            A list of Strings representing the tags assigned to this Video. Each tag can be not 
            more than 128 characters, and a video can have no more than 1200 tags.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.ThumbnailUrl">
            <summary>
            The URL to the thumbnail image associated with this Video. Thumbnails are 120x90 pixels.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.VideoFullLength">
            <summary>
            A single BrightcoveRendition that represents the the video file for the Video. 
            Note that when creating or updating a video, only one of either VideoFullLength and Renditions may 
            be set. If both are set, only Renditions will be submitted to the API and VideoFullLength will
            be ignored.
            Note that this property can be accessed with the Media API only with a special read or write token.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveVideo.VideoStillUrl">
            <summary>
            The URL to the video still image associated with this Video. Video stills are 480x360 pixels.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Util.FormUploadUtil">
            <summary>
            Calculates an <see cref="T:System.Security.Cryptography.MD5"/> hash for a given file.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.FormUploadUtil.CalculateMd5Hash(System.String)">
            <summary>
            Calculates an <see cref="T:System.Security.Cryptography.MD5"/> hash based on a given file path.
            </summary>
            <param name="filePath">The file path of a given file.</param>
            <returns>The string representation of the <see cref="T:System.Security.Cryptography.MD5"/> hash.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.FormUploadUtil.CalculateMd5Hash(System.IO.FileInfo)">
            <summary>
            Calculates an <see cref="T:System.Security.Cryptography.MD5"/> hash based on a given <see cref="T:System.IO.FileInfo"/>.
            </summary>
            <param name="fileInfo">The <see cref="T:System.IO.FileInfo"/> of a given file.</param>
            <returns>The string representation of the <see cref="T:System.Security.Cryptography.MD5"/> hash.</returns>
        </member>
        <member name="T:BrightcoveMapiWrapper.Util.Extensions.EnumExtenstions">
            <summary>
            Manipulates enums as extension methods.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.Extensions.EnumExtenstions.ToBrightcoveName``1(``0)">
            <summary>
            Converts a Brightcove enum from it's C# representation to a plaintext string
            accepted by Brightcove's API
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumeration"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.Extensions.EnumExtenstions.ToBrightcoveEnum``1(System.String)">
            <summary>
            Converts a plain-text string to the specified Brightcove <see cref="T:System.Enum"/>.
            </summary>
            <typeparam name="T">The type of Brightcove <see cref="T:System.Enum"/>.</typeparam>
            <param name="brightcoveEnum">A plain-text string.</param>
            <returns>A correctly-parsed Brightcove <see cref="T:System.Enum"/> representation.</returns>
        </member>
        <member name="T:BrightcoveMapiWrapper.Util.Extensions.CollectionExtensions">
            <summary>
            A set of extension methods for various types of collections used through the wrapper.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.Extensions.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the elements of the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <typeparam name="T">The type of element to add.</typeparam>
            <param name="collection">The initial collection.</param>
            <param name="items">The items to add.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.Extensions.CollectionExtensions.ToQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Converts a <see cref="T:System.Collections.Specialized.NameValueCollection"/> to query string parameters.
            </summary>
            <param name="nvc">The initial <see cref="T:System.Collections.Specialized.NameValueCollection"/>.</param>
            <returns>A properly formatted query string.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.Extensions.CollectionExtensions.AddRange(System.Collections.Specialized.NameValueCollection,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds the elements of the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> for the given <paramref name="key"/> to the <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </summary>
            <param name="nvc">The given <see cref="T:System.Collections.Specialized.NameValueCollection"/>.</param>
            <param name="key">The key for which to add additional values.</param>
            <param name="values">The values to add to the given key.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.Extensions.CollectionExtensions.ToJson(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts an <see cref="T:System.Collections.Generic.IDictionary`2"/> to a JSON string.
            </summary>
            <param name="dict">The <see cref="T:System.Collections.Generic.IDictionary`2"/> to convert.</param>
            <returns>A JSON string.</returns>
        </member>
        <member name="T:BrightcoveMapiWrapper.Api.Connectors.BasicRequestBuilder">
            <summary>
            A basic implementation of IRequestBuilder
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BasicRequestBuilder.#ctor(BrightcoveMapiWrapper.Api.BrightcoveApiConfig)">
            <summary>
            Constructor.
            </summary>
            <param name="configuration">A configured <see cref="T:BrightcoveMapiWrapper.Api.BrightcoveApiConfig"/>.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BasicRequestBuilder.BuildRequest(System.String)">
            <summary>
            Builds a GET request for the specified URL.
            </summary>
            <param name="url">The URL to request.</param>
            <returns>An HttpWebRequest for GETing the specified URL.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BasicRequestBuilder.BuildPostFormRequest(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Builds a POST request for the specified URL and parameters.
            </summary>
            <param name="postUrl">The URL to request.</param>
            <param name="postParameters">The parameters to POST.</param>
            <returns>An HttpWebRequest that will POST the specified parameters.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BasicRequestBuilder.BuildMultipartFormDataPostRequest(System.String,System.Collections.Specialized.NameValueCollection,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo)">
            <summary>
            Builds the multipart form data post request.
            </summary>
            <param name="postUrl">The post URL.</param>
            <param name="postParameters">The post parameters.</param>
            <param name="fileToUpload">The file to upload.</param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.Connectors.BasicRequestBuilder.WriteMultipartFormData(System.Net.HttpWebRequest,System.Collections.Specialized.NameValueCollection,BrightcoveMapiWrapper.Api.Connectors.FileUploadInfo,System.String)">
            <summary>
            Writes the multipart form data.
            </summary>
            <param name="request">The request.</param>
            <param name="postParameters">The post parameters.</param>
            <param name="fileToUpload">The file to upload.</param>
            <param name="boundary">The boundary.</param>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.Connectors.BasicRequestBuilder.Configuration">
            <summary>
            An instance of <see cref="T:BrightcoveMapiWrapper.Api.BrightcoveApiConfig"/>.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Util.EnumUtil">
            <summary>
            Manipulates enums.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.EnumUtil.TryParse``1(System.String,``0@)">
            <summary>
            Converts the string or number representation of an enum to its equivalent enum object. 
            A return value indicates whether the conversion succeeded.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <param name="value">Enum name or value</param>
            <param name="result">The resulting enum object</param>
            <returns>True if the conversion succeeded, otherwise false.</returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.EnumUtil.TryParse``1(System.String,``0@,System.Boolean)">
            <summary>
            Converts the string or number representation of an enum to its equivalent enum object. 
            A return value indicates whether the conversion succeeded.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <param name="value">Enum name or value</param>
            <param name="result">The resulting enum object</param>
            <param name="ignoreCase">If true, ignore case; otherwise, regard case.</param>
            <returns>True if the conversion succeeded, otherwise false.</returns>
        </member>
        <member name="T:BrightcoveMapiWrapper.Api.BrightcoveApiConfig">
            <summary>
            Used to generate basic information about connections to Brightcove.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.#ctor">
            <summary>
            Generic constructor.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.#ctor(System.String)">
            <summary>
            A read-only configuration.
            </summary>
            <param name="readToken">The authentication token provided to authorize read access to the Media APIs.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.#ctor(System.String,BrightcoveMapiWrapper.Model.BrightcoveRegion)">
            <summary>
            A read-only configuration for the specified region.
            </summary>
            <param name="readToken">The authentication token provided to authorize read access to the Media APIs.</param>
            <param name="region">The region of the video publishing.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.#ctor(System.String,System.String)">
            <summary>
            A read/write configuration.
            </summary>
            <param name="readToken">The authentication token provided to authorize read access to the Media APIs.</param>
            <param name="writeToken">The authentication token provided to authorize write access to the Media APIs.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.#ctor(System.String,System.String,BrightcoveMapiWrapper.Model.BrightcoveRegion)">
            <summary>
            A read/write configuration for the specified region.
            </summary>
            <param name="readToken">The authentication token provided to authorize read access to the Media APIs.</param>
            <param name="writeToken">The authentication token provided to authorize write access to the Media APIs.</param>
            <param name="region">The region of the video publishing.</param>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.ReadToken">
            <summary>
            The token that allows API reads for your account
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.WriteToken">
            <summary>
            The token that allows API writes for your account
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.ApiReadUrl">
            <summary>
            The URL at which the REST API resides for reads (HTTP GET)
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.ApiWriteUrl">
            <summary>
            The URL at which the REST API resides for writes (HTTP POST)
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.MediaDelivery">
            <summary>
            If universal delivery service is enabled for your account, set this 
            optional parameter to http to return video by HTTP, rather than streaming. 
            Meaningful only if used together with the video_fields=FLVURL, videoFullLength, 
            or renditions parameters. This is a MediaDeliveryTypeEnum with a value of http or default.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.RequestTimeout">
            <summary>
            The number of milliseconds to wait before an API request times out. 
            The default value is 100,000 milliseconds (100 seconds).
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.Encoding">
            <summary>
            The encoding used when POSTing files for upload. Defaults to UTF-8.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApiConfig.UserAgent">
            <summary>
            The user agent report by this API wrapper. Defaults to "Brightcove .NET MAPI Wrapper"
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Containers.CustomFieldCollection">
            <summary>
            A collection of custom field values.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.CustomFieldCollection.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.CustomFieldCollection.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
        <member name="T:BrightcoveMapiWrapper.Serialization.BrightcoveSerializerFactory">
            <summary>
            Creates a <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/> suitable for Brightcove model items.
            </summary>
        </member>
        <member name="F:BrightcoveMapiWrapper.Serialization.BrightcoveSerializerFactory._serializer">
            <summary>
            The static serializer.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Serialization.BrightcoveSerializerFactory.#cctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Serialization.BrightcoveSerializerFactory.GetSerializer">
            <summary>
            Gets the Brightcove serializer.
            </summary>
            <returns>The Brightcove serializer.</returns>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint">
            <summary>
            The BrightcoveCuePoint object is a marker set at a precise time point in the duration of a video. You can 
            use cue points to trigger mid-roll ads or to separate chapters or scenes in a long-form video. 
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint.Name">
            <summary>
            Required. A name for the cue point so that you can refer to it.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint.VideoId">
            <summary>
            Although the API docs say that this field is "A list of the ids of one or more videos that 
            this cue point applies to", it appears that in practice this is actually only a single video
            ID, and not a comma-separated list.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint.Time">
            <summary>
            Required. The time of the cue point, measured in milliseconds from the 
            beginning of the video.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint.ForceStop">
            <summary>
            If true, the video stops playback at the cue point. This setting is valid only 
            for AD type cue points.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint.MetaData">
            <summary>
            A string that can be passed along with a CODE cue point. Not more than 512 characters.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveCuePoint.Type">
            <summary>
            Required. An integer code corresponding to the type of cue point. One of AD or CODE. 
            An Ad cue point is used to trigger mid-roll ad requests. A Code cue point can be used 
            to indicate a chapter or scene break in the video.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Containers.BrightcoveItemCollection`1">
            <summary>
            Represents a collection of BrightcoveItems
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.BrightcoveItemCollection`1.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.BrightcoveItemCollection`1.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.BrightcoveItemCollection`1.PageNumber">
            <summary>
            The current page of results. (Each page is limited to a max of 100 items)
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.BrightcoveItemCollection`1.PageSize">
            <summary>
            The size of each page of results. If not specified, the default is 100
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.BrightcoveItemCollection`1.TotalCount">
            <summary>
            The total number of items available
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition">
            <summary>
            The BrightcoveRendition object represents one of the multi-bitrate streaming renditions of a video.
            A Video should have not more than 10 Rendition objects.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.ControllerType">
            <summary>
            [Optional — required for live streaming only] Depending on your CDN, one of the following 
            values: LIMELIGHT_LIVE or AKAMAI_LIVE.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.EncodingRate">
            <summary>
            The rendition's encoding rate, in bits per second.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.FrameHeight">
            <summary>
            The rendition's display height, in pixels.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.FrameWidth">
            <summary>
            The rendition's display width, in pixels.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.Size">
            <summary>
            The file size of the rendition, in bytes.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.RemoteUrl">
            <summary>
            Required, for remote assets. The complete path to the file hosted on the remote server. 
            If the file is served using progressive download, then you must include the file name 
            and extension for the file. You can also use a URL that re-directs to a URL that includes 
            the file name and extension. If the file is served using Flash streaming, use the 
            remoteStreamName attribute to provide the stream name.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.RemoteStreamName">
            <summary>
            [Optional — required for streaming remote assets only] A stream name for Flash streaming 
            appended to the value of the remoteUrl property.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.Url">
            <summary>
            The URL of the rendition file.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.VideoDuration">
            <summary>
            The length of the remote video asset in milliseconds.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.VideoCodec">
            <summary>
            Valid values are SORENSON, ON2, and H264.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveRendition.VideoContainer">
            <summary>
            (I can't actually find this property defined in any documentation,
            but it's returned by the API and seems useful)
            The container in which the video resides. Will generally be either "MP4" or "VP6" (flash).
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Api.BrightcoveApiException">
            <summary>
            An Brightcove specific Exception class.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiException.#ctor(BrightcoveMapiWrapper.Model.Containers.BrightcoveError)">
            <summary>
            Constructor.
            </summary>
            <param name="error">An encountered <see cref="T:BrightcoveMapiWrapper.Model.Containers.BrightcoveError"/>.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiException.#ctor(BrightcoveMapiWrapper.Model.Containers.BrightcoveNestedError)">
            <summary>
            Constructor.
            </summary>
            <param name="nestedError">An encountered <see cref="T:BrightcoveMapiWrapper.Model.Containers.BrightcoveNestedError"/>.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Api.BrightcoveApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).</exception>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApiException.Message">
            <summary>
            Returns the message of the exception.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Api.BrightcoveApiException.Error">
            <summary>
            The error passed to this exception.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Items.BrightcoveImage">
            <summary>
            The BrightcoveImage object represents an image file in Brightcove's system. Images are associated with videos as 
            thumbnail images, video still images, or logo overlays. An image can be a JPEG, GIF, or PNG-formatted image. Note 
            that when creating a new image asset, the only property that is required is type. If you are not uploading a file, 
            the remoteUrl property is also required.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveImage.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcoveImage.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveImage.Id">
            <summary>
            A number that uniquely identifies the Image. This id is automatically 
            assigned by Brightcove when the Image is created.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveImage.ReferenceId">
            <summary>
            A user-specified id that uniquely identifies this Image.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveImage.Type">
            <summary>
            THUMBNAIL, VIDEO_STILL, or LOGO_OVERLAY. The type is writable and required 
            when you create an Image; it cannot subsequently be changed.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveImage.RemoteUrl">
            <summary>
            The URL of a remote image file. This property is required if you are not uploading a 
            file for the image asset.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcoveImage.DisplayName">
            <summary>
            The name of the asset, which will be displayed in the Media module.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Util.ApiUtil">
            <summary>
            Checks for errors and throws exceptions where applicable.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.ApiUtil.ThrowIfError(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Throws an exception if certain conditions are met.
            </summary>
            <param name="dictionary"></param>
            <param name="key"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.ApiUtil.ThrowIfNestedError(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Throws an exception if certain conditions are met.
            </summary>
            <param name="objError"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:BrightcoveMapiWrapper.Util.ApiUtil.ThrowIfError(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Throws an exception if certain conditions are met.
            </summary>
            <param name="objError"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist">
            <summary>
            The BrightcovePlaylist object is a collection of BrightcoveVideos.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
<<<<<<< HEAD
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the <see cref="T:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist"/>. Note that the <see cref="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.Videos"/> property is not serialized with the rest of the other properties, as including this property on updates causes an exception.
            </summary>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
=======
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.AccountId">
            <summary>
            A number that uniquely identifies the account to which this Playlist belongs, assigned by Brightcove.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.FilterTags">
            <summary>
            A list of the tags that apply to this smart playlist.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.Id">
            <summary>
            A number that uniquely identifies the Playlist. This id is automatically assigned when 
            the Playlist is created.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.Name">
            <summary>
            The title of this Playlist, limited to 100 characters. The name is a required property when you
            create a playlist.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.PlaylistType">
            <summary>
            For a manual playlist, set this to EXPLICIT. For a smart playlist, indicate how to order the playlist by setting this to one of the following choices: 
            OLDEST_TO_NEWEST (by activated date)
            NEWEST_TO_OLDEST (by activated date)
            START_DATE_OLDEST_TO_NEWEST
            START_DATE_NEWEST_TO_OLDEST 
            ALPHABETICAL (by video name)
            PLAYSTOTAL
            PLAYS_TRAILING_WEEK
            
            The playlistType is a required property when you create a playlist.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.ReferenceId">
            <summary>
            A user-specified id, limited to 150 characters, that uniquely identifies this Playlist. 
            Note that the find_playlists_by_reference_ids method cannot handle referenceIds that 
            contain commas, so you may want to avoid using commas in referenceId values.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.ShortDescription">
            <summary>
            A short description describing the Playlist, limited to 250 characters.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.TagInclusionRule">
            <summary>
            For a smart playlist, defines whether the video must contain all or contain 
            one or more of the values in filterTags. Use AND for "contains all" and OR for 
            "contains one or more." Not available in Read API methods.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.ThumbnailUrl">
            <summary>
            The URL of the thumbnail associated with this Playlist.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.VideoIds">
            <summary>
            A list of the ids of the Videos that are encapsulated in the Playlist.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Items.BrightcovePlaylist.Videos">
            <summary>
            A list of the BrightcoveVideo objects that are encapsulated in the Playlist.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Containers.BrightcoveResultContainer`1">
            <summary>
            A container for items contained within the POST response container.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
<<<<<<< HEAD
        <member name="M:BrightcoveMapiWrapper.Model.Containers.BrightcoveResultContainer`1.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.BrightcoveResultContainer`1.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
=======
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
        <member name="P:BrightcoveMapiWrapper.Model.Containers.BrightcoveResultContainer`1.Result">
            <summary>
            A type of result.
            </summary>
        </member>
        <member name="T:BrightcoveMapiWrapper.Model.Containers.BrightcoveNestedError">
            <summary>
            A nested error returned by the Brightcove.
            </summary>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.BrightcoveNestedError.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
<<<<<<< HEAD
        <member name="M:BrightcoveMapiWrapper.Model.Containers.BrightcoveNestedError.Serialize(System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Serializes the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            A serialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BrightcoveMapiWrapper.Model.Containers.BrightcoveNestedError.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            Deserializes the specified dictionary.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer"/>.</param>
        </member>
=======
>>>>>>> e5713fc5dfa129c75b57d9eecb64b18ffab590aa
        <member name="P:BrightcoveMapiWrapper.Model.Containers.BrightcoveNestedError.Message">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.BrightcoveNestedError.Code">
            <summary>
            The error code number.
            </summary>
        </member>
        <member name="P:BrightcoveMapiWrapper.Model.Containers.BrightcoveNestedError.Errors">
            <summary>
            A collection of nested errors.
            </summary>
        </member>
    </members>
</doc>
